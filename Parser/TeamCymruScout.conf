# Product: TeamCymru Scout
# Category: Threat Intel
# Supported Format: JSON
# Last Updated: 2024-08-22
# Copyright 2024 Chronicle LLC

filter {
  mutate {
    replace => {
      "account_name" => ""
      "account_type" => ""
      "used_queries" => ""
      "remaining_queries" => ""
      "used_queries_percentage" => ""
      "query_limit" => ""
      "used_foundation_queries" => "",
      "remaining_foundation_queries" => "",
      "foundation_query_limit" => "",
      "used_foundation_queries_percentage" => "",
      "event_type" => ""
      "token_additional" => ""
      "indicator_type" => ""
      "indicator" => ""
      "ip" => ""
      "country_code" => ""
      "country_codes" => ""
      "start_date" => ""
      "end_date" => ""
      "security_result_label" => ""
      "sections" => ""
      "event_count" => ""
      "as_info" => ""
      "tags" => ""
      "token_about" => ""
      "start_date_supported" => "false"
      "end_date_supported" => "false"
      "interval_start" => ""
      "interval_end" => ""
      "ip_found" => "false"
      "verdict_set" => "false"
    }
  }

  mutate {
    replace => {
      "insights.insights" => ""
      "summary.open_ports" => ""
      "summary.pdns" => ""
      "summary.top_peers" => ""
      "summary.comms_total" => ""
      "summary.service_counts" => ""
      "summary.fingerprints" => ""
      "fingerprints.fingerprints" => ""
      "fingerprints.event_count" => ""
      "summary.certs" => ""
      "summary.whois.asn" => ""
      "summary.whois.as_name" => ""
      "summary.whois.net_name" => ""
      "summary.whois.org_name" => ""
      "summary.last_seen" => ""
      "insights.overall_rating" => ""
      "usage.used_queries" => ""
      "usage.remaining_queries" => ""
      "usage.query_limit" => ""
      "usage.foundation_api_usage.used_queries" => ""
      "usage.foundation_api_usage.remaining_queries" => ""
      "usage.foundation_api_usage.query_limit" => ""
      "summary.total" => ""
      "summary.geo_ip_cc" => ""
      "summary.tags" => ""
      "summary.bgp_asn" => ""
      "summary.bgp_asname" => ""
      "summary.open_ports.total" => ""
      "summary.open_ports.unique_ports" => ""
      "summary.certs.top_certs" => ""
      "summary.tag_timeline.data" => ""
      "summary.start_date" => ""
      "summary.end_date" => ""
      "whois.modified" => ""
      "whois.cidr" => ""
      "whois.net_handle" => ""
      "whois.description" => ""
      "whois.abuse_contact_id" => ""
      "whois.about_contact_role" => ""
      "whois.about_contact_person" => ""
      "whois.about_contact_email" => ""
      "whois.about_contact_phone" => ""
      "whois.about_contact_country" => ""
      "whois.about_contact_city" => ""
      "whois.about_contact_address" => ""
      "whois.admin_contact_id" => ""
      "whois.admin_contact_role" => ""
      "whois.admin_contact_person" => ""
      "whois.admin_contact_email" => ""
      "whois.admin_contact_phone" => ""
      "whois.admin_contact_country" => ""
      "whois.admin_contact_city" => ""
      "whois.admin_contact_address" => ""
      "whois.tech_contact_id" => ""
      "whois.tech_contact_role" => ""
      "whois.tech_contact_person" => ""
      "whois.tech_contact_email" => ""
      "whois.tech_contact_phone" => ""
      "whois.tech_contact_country" => ""
      "whois.tech_contact_city" => ""
      "whois.tech_contact_address" => ""
      "whois.org_id" => ""
      "whois.org_name" => ""
      "whois.org_email" => ""
      "whois.org_phone" => ""
      "whois.org_city" => ""
      "whois.org_address" => ""
      "whois.mnt_by_email" => ""
      "whois.mnt_lower_email" => ""
      "whois.mnt_router_email" => ""
      "open_ports.open_ports" => ""
      "open_ports.event_count" => ""
      "open_ports.unique_ports" => ""
      "x509.event_count" => ""
      "pdns.event_count" => ""
      "pdns.pdns" => ""
      "x509.x509" => ""
      "communications.peers" => ""
      "communications.event_count" => ""
      "summary.insights.overall_rating" => ""
      "summary.insights.insights" => ""
      "summary.insights.total" => ""
      "summary.pdns.top_pdns" => ""
      "summary.pdns.total" => ""
      "summary.open_ports.top_open_ports" => ""
      "summary.fingerprints.top_fingerprints" => ""
      "proto_by_ip.data.proto_by_date" => ""
      "top_tags_by_ip.data.dates" => ""
      "top_tags_by_ip.data.datasets" => ""
      "top_services_by_ip.data.dates" => ""
      "top_services_by_ip.data.datasets" => ""
      "top_country_codes_by_ip.data.dates" => ""
      "top_country_codes_by_ip.data.datasets" => ""
      "top_asns_by_ip.data.dates" => ""
      "top_asns_by_ip.data.datasets" => ""
    }
  }

  mutate {
    gsub => ["message", "[\\r\\n\\t]*", ""]
  }

  json {
    source => "message"
    array_function => "split_columns"
    on_error => "not_json"
  }

  if [not_json] {
    drop {
      tag => "TAG_MALFORMED_ENCODING"
    }
  }

  if [indicator_type] != "" {
    mutate {
      replace => {
        "event.idm.entity.metadata.product_name" =>
        "Scout"
        "event.idm.entity.metadata.vendor_name" =>
        "TeamCymru"
      }
    }
  }
  else {
    mutate {
      replace => {
        "event.idm.read_only_udm.metadata.event_type" =>
        "GENERIC_EVENT"
        "event.idm.read_only_udm.metadata.product_name" =>
        "Scout"
        "event.idm.read_only_udm.metadata.vendor_name" =>
        "TeamCymru"
      }
    }
  }

  if [ip] != "" {
    mutate {
      merge => {
        "token_about.ip" => "ip"
      }
      on_error => "no_ip_found"
    }

    if ![no_ip_found] {
      mutate {
        replace => {
          "ip_found" => "true"
        }
      }
    }
  }

  if [insights][overall_rating] == "suspicious" {
    mutate {
      replace => {
        "security_result_label.threat_verdict" => "SUSPICIOUS"
        "verdict_set" => "true"
      }
    }
  }
  else if [insights][overall_rating] == "malicious" {
    mutate {
      replace => {
        "security_result_label.threat_verdict" => "MALICIOUS"
        "verdict_set" => "true"
      }
    }
  }

  if [summary][insights][overall_rating] == "suspicious" {
    mutate {
      replace => {
        "security_result_label.threat_verdict" => "SUSPICIOUS"
        "verdict_set" => "true"
      }
    }
  }
  else if [summary][insights][overall_rating] == "malicious" {
    mutate {
      replace => {
        "security_result_label.threat_verdict" => "MALICIOUS"
        "verdict_set" => "true"
      }
    }
  }

  if [indicator_type] != "" and [verdict_set] == "false" {
    mutate {
      replace => {
        "security_result_label.threat_verdict" => "UNDETECTED"
      }
    }
  }

  mutate {
    replace => {
      "account_name_label.value.string_value" => "%{account_name}"
    }
    on_error => "no_account_name_value"
  }

  if ![no_account_name_value] and [account_name] != "" {
    mutate {
      replace => {
        "account_name_label.key" => "account_name"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "account_name_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_modified_label.value.string_value" => "%{whois.modified}"
    }
    on_error => "no_modified_value"
  }

  if ![no_modified_value] and [whois][modified] != "" {
    mutate {
      replace => {
        "whois_modified_label.key" => "whois_modified"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_modified_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_cidr_label.value.string_value" => "%{whois.cidr}"
    }
    on_error => "no_cidr_value"
  }

  if ![no_cidr_value] and [whois][cidr] != "" {
    mutate {
      replace => {
        "whois_cidr_label.key" => "whois_cidr"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_cidr_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_net_handle_label.value.string_value" => "%{whois.net_handle}"
    }
    on_error => "no_net_handle_value"
  }

  if ![no_net_handle_value] and [whois][net_handle] != "" {
    mutate {
      replace => {
        "whois_net_handle_label.key" => "whois_net_handle"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_net_handle_label"
      }
    }
  }

  mutate {
    convert => {
      "fingerprints.event_count" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "fingerprints_event_count_label.value.string_value" =>
      "%{fingerprints.event_count}"
    }
    on_error => "no_fingerprints_event_count_value"
  }

  if ![no_fingerprints_event_count_value]
  and [fingerprints][event_count] != "" {
    mutate {
      replace => {
        "fingerprints_event_count_label.key" => "fingerprints_event_count"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "fingerprints_event_count_label"
      }
    }
  }

  mutate {
    convert => {
      "open_ports.event_count" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "open_ports_event_count_label.value.string_value" =>
      "%{open_ports.event_count}"
    }
    on_error => "no_open_ports_event_count_value"
  }

  if ![no_open_ports_event_count_value] and [open_ports][event_count] != "" {
    mutate {
      replace => {
        "open_ports_event_count_label.key" => "open_ports_event_count"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "open_ports_event_count_label"
      }
    }
  }

  mutate {
    convert => {
      "pdns.event_count" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "pdns_event_count_label.value.string_value" => "%{pdns.event_count}"
    }
    on_error => "no_pdns_event_count_value"
  }

  if ![no_pdns_event_count_value] and [pdns][event_count] != "" {
    mutate {
      replace => {
        "pdns_event_count_label.key" => "pdns_event_count"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "pdns_event_count_label"
      }
    }
  }

  mutate {
    convert => {
      "x509.event_count" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "x509_event_count_label.value.string_value" => "%{x509.event_count}"
    }
    on_error => "no_x509_event_count_value"
  }

  if ![no_x509_event_count_value] and [x509][event_count] != "" {
    mutate {
      replace => {
        "x509_event_count_label.key" => "x509_event_count"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "x509_event_count_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_decription_label.value.string_value" => "%{whois.description}"
    }
    on_error => "no_description_handle_value"
  }

  if ![no_description_handle_value] and [whois][description] != "" {
    mutate {
      replace => {
        "whois_decription_label.key" => "whois_decription"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_decription_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_abuse_contact_id_label.value.string_value" =>
      "%{whois.abuse_contact_id}"
    }
    on_error => "no_abuse_contact_id_handle_value"
  }

  if ![no_abuse_contact_id_handle_value] and [whois][abuse_contact_id] != "" {
    mutate {
      replace => {
        "whois_abuse_contact_id_label.key" => "whois_abuse_contact_id"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_abuse_contact_id_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_about_contact_role_label.value.string_value" =>
      "%{whois.about_contact_role}"
    }
    on_error => "no_about_contact_role_handle_value"
  }

  if ![no_about_contact_role_handle_value]
  and [whois][about_contact_role] != "" {
    mutate {
      replace => {
        "whois_about_contact_role_label.key" => "whois_about_contact_role"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_about_contact_role_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_about_contact_person_label.value.string_value" =>
      "%{whois.about_contact_person}"
    }
    on_error => "no_about_contact_person_handle_value"
  }

  if ![no_about_contact_person_handle_value]
  and [whois][about_contact_person] != "" {
    mutate {
      replace => {
        "whois_about_contact_person_label.key" => "whois_about_contact_person"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_about_contact_person_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_about_contact_email_label.value.string_value" =>
      "%{whois.about_contact_email}"
    }
    on_error => "no_about_contact_email_handle_value"
  }

  if ![no_about_contact_email_handle_value]
  and [whois][about_contact_email] != "" {
    mutate {
      replace => {
        "whois_about_contact_email_label.key" => "whois_about_contact_email"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_about_contact_email_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_about_contact_phone_label.value.string_value" =>
      "%{whois.about_contact_phone}"
    }
    on_error => "no_about_contact_phone_handle_value"
  }

  if ![no_about_contact_phone_handle_value]
  and [whois][about_contact_phone] != "" {
    mutate {
      replace => {
        "whois_about_contact_phone_label.key" => "whois_about_contact_phone"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_about_contact_phone_label"
      }
    }
  }
  mutate {
    replace => {
      "whois_about_contact_country_label.value.string_value" =>
      "%{whois.about_contact_country}"
    }
    on_error => "no_about_contact_country_handle_value"
  }

  if ![no_about_contact_country_handle_value]
  and [whois][about_contact_country] != "" {
    mutate {
      replace => {
        "whois_about_contact_country_label.key" => "whois_about_contact_country"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_about_contact_country_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_about_contact_city_label.value.string_value" =>
      "%{whois.about_contact_city}"
    }
    on_error => "no_about_contact_city_handle_value"
  }

  if ![no_about_contact_city_handle_value]
  and [whois][about_contact_city] != "" {
    mutate {
      replace => {
        "whois_about_contact_city_label.key" => "whois_about_contact_city"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_about_contact_city_label"
      }
    }
  }
  mutate {
    replace => {
      "whois_about_contact_address_label.value.string_value" =>
      "%{whois.about_contact_address}"
    }
    on_error => "no_about_contact_address_handle_value"
  }

  if ![no_about_contact_address_handle_value]
  and [whois][about_contact_address] != "" {
    mutate {
      replace => {
        "whois_about_contact_address_label.key" => "whois_about_contact_address"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_about_contact_address_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_admin_contact_id_label.value.string_value" =>
      "%{whois.admin_contact_id}"
    }
    on_error => "no_admin_contact_id_handle_value"
  }

  if ![no_admin_contact_id_handle_value] and [whois][admin_contact_id] != "" {
    mutate {
      replace => {
        "whois_admin_contact_id_label.key" => "whois_admin_contact_id"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_admin_contact_id_label"
      }
    }
  }
  mutate {
    replace => {
      "whois_admin_contact_role_label.value.string_value" =>
      "%{whois.admin_contact_role}"
    }
    on_error => "no_admin_contact_role_handle_value"
  }

  if ![no_admin_contact_role_handle_value]
  and [whois][admin_contact_role] != "" {
    mutate {
      replace => {
        "whois_admin_contact_role_label.key" => "whois_admin_contact_role"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_admin_contact_role_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_admin_contact_person_label.value.string_value"
      => "%{whois.admin_contact_person}"
    }
    on_error => "no_admin_contact_person_handle_value"
  }

  if ![no_admin_contact_person_handle_value]
  and [whois][admin_contact_person] != "" {
    mutate {
      replace => {
        "whois_admin_contact_person_label.key" => "whois_admin_contact_person"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_admin_contact_person_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_admin_contact_email_label.value.string_value" =>
      "%{whois.admin_contact_email}"
    }
    on_error => "no_admin_contact_email_handle_value"
  }

  if ![no_admin_contact_email_handle_value]
  and [whois][admin_contact_email] != "" {
    mutate {
      replace => {
        "whois_admin_contact_email_label.key" => "whois_admin_contact_email"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_admin_contact_email_label"
      }
    }
  }
  mutate {
    replace => {
      "whois_admin_contact_phone_label.value.string_value" =>
      "%{whois.admin_contact_phone}"
    }
    on_error => "no_admin_contact_phone_handle_value"
  }

  if ![no_admin_contact_phone_handle_value]
  and [whois][admin_contact_phone] != "" {
    mutate {
      replace => {
        "whois_admin_contact_phone_label.key" => "whois_admin_contact_phone"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_admin_contact_phone_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_admin_contact_country_label.value.string_value" =>
      "%{whois.admin_contact_country}"
    }
    on_error => "no_admin_contact_country_handle_value"
  }

  if ![no_admin_contact_country_handle_value]
  and [whois][admin_contact_country] != "" {
    mutate {
      replace => {
        "whois_admin_contact_country_label.key" => "whois_admin_contact_country"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_admin_contact_country_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_admin_contact_city_label.value.string_value" =>
      "%{whois.admin_contact_city}"
    }
    on_error => "no_admin_contact_city_handle_value"
  }

  if ![no_admin_contact_city_handle_value]
  and [whois][admin_contact_city] != "" {
    mutate {
      replace => {
        "whois_admin_contact_city_label.key" => "whois_admin_contact_city"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_admin_contact_city_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_id_label.value.string_value" =>
      "%{whois.tech_contact_id}"
    }
    on_error => "no_tech_contact_id_handle_value"
  }

  if ![no_tech_contact_id_handle_value] and [whois][tech_contact_id] != "" {
    mutate {
      replace => {
        "whois_tech_contact_id_label.key" => "whois_tech_contact_id"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_id_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_role_label.value.string_value" =>
      "%{whois.tech_contact_role}"
    }
    on_error => "no_tech_contact_role_handle_value"
  }

  if ![no_tech_contact_role_handle_value] and [whois][tech_contact_role] != "" {
    mutate {
      replace => {
        "whois_tech_contact_role_label.key" => "whois_tech_contact_role"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_role_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_person_label.value.string_value" =>
      "%{whois.tech_contact_person}"
    }
    on_error => "no_tech_contact_person_handle_value"
  }

  if ![no_tech_contact_person_handle_value]
  and [whois][tech_contact_person] != "" {
    mutate {
      replace => {
        "whois_tech_contact_person_label.key" => "whois_tech_contact_person"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_person_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_email_label.value.string_value" =>
      "%{whois.tech_contact_email}"
    }
    on_error => "no_tech_contact_email_handle_value"
  }

  if ![no_tech_contact_email_handle_value]
  and [whois][tech_contact_email] != "" {
    mutate {
      replace => {
        "whois_tech_contact_email_label.key" => "whois_tech_contact_email"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_email_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_phone_label.value.string_value" =>
      "%{whois.tech_contact_phone}"
    }
    on_error => "no_tech_contact_phone_handle_value"
  }

  if ![no_tech_contact_phone_handle_value]
  and [whois][tech_contact_phone] != "" {
    mutate {
      replace => {
        "whois_tech_contact_phone_label.key" => "whois_tech_contact_phone"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_phone_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_country_label.value.string_value" =>
      "%{whois.tech_contact_country}"
    }
    on_error => "no_tech_contact_country_handle_value"
  }

  if ![no_tech_contact_country_handle_value]
  and [whois][tech_contact_country] != "" {
    mutate {
      replace => {
        "whois_tech_contact_country_label.key" => "whois_tech_contact_country"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_country_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_city_label.value.string_value" =>
      "%{whois.tech_contact_city}"
    }
    on_error => "no_tech_contact_city_handle_value"
  }

  if ![no_tech_contact_city_handle_value] and [whois][tech_contact_city] != "" {
    mutate {
      replace => {
        "whois_tech_contact_city_label.key" => "whois_tech_contact_city"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_city_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_tech_contact_address_label.value.string_value" =>
      "%{whois.tech_contact_address}"
    }
    on_error => "no_tech_contact_address_handle_value"
  }

  if ![no_tech_contact_address_handle_value]
  and [whois][tech_contact_address] != "" {
    mutate {
      replace => {
        "whois_tech_contact_address_label.key" => "whois_tech_contact_address"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_tech_contact_address_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_org_id_label.value.string_value" => "%{whois.org_id}"
    }
    on_error => "no_org_id_handle_value"
  }

  if ![no_org_id_handle_value] and [whois][org_id] != "" {
    mutate {
      replace => {
        "whois_org_id_label.key" => "whois_org_id"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_org_id_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_org_email_label.value.string_value" => "%{whois.org_email}"
    }
    on_error => "no_org_email_handle_value"
  }

  if ![no_org_email_handle_value] and [whois][org_email] != "" {
    mutate {
      replace => {
        "whois_org_email_label.key" => "whois_org_email"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_org_email_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_org_phone_label.value.string_value" => "%{whois.org_phone}"
    }
    on_error => "no_org_phone_handle_value"
  }

  if ![no_org_phone_handle_value] and [whois][org_phone] != "" {
    mutate {
      replace => {
        "whois_org_phone_label.key" => "whois_org_phone"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_org_phone_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_org_city_label.value.string_value" => "%{whois.org_city}"
    }
    on_error => "no_org_city_handle_value"
  }

  if ![no_org_city_handle_value] and [whois][org_city] != "" {
    mutate {
      replace => {
        "whois_org_city_label.key" => "whois_org_city"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_org_city_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_org_address_label.value.string_value" => "%{whois.org_address}"
    }
    on_error => "no_org_address_handle_value"
  }

  if ![no_org_address_handle_value] and [whois][org_address] != "" {
    mutate {
      replace => {
        "whois_org_address_label.key" => "whois_org_address"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_org_address_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_mnt_by_email_label.value.string_value" => "%{whois.mnt_by_email}"
    }
    on_error => "no_mnt_by_email_handle_value"
  }

  if ![no_mnt_by_email_handle_value] and [whois][mnt_by_email] != "" {
    mutate {
      replace => {
        "whois_mnt_by_email_label.key" => "whois_mnt_by_email"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_mnt_by_email_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_mnt_lower_email_label.value.string_value" =>
      "%{whois.mnt_lower_email}"
    }
    on_error => "no_mnt_lower_email_handle_value"
  }

  if ![no_mnt_lower_email_handle_value] and [whois][mnt_lower_email] != "" {
    mutate {
      replace => {
        "whois_mnt_lower_email_label.key" => "whois_mnt_lower_email"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_mnt_lower_email_label"
      }
    }
  }

  mutate {
    replace => {
      "whois_mnt_router_email_label.value.string_value" =>
      "%{whois.mnt_router_email}"
    }
    on_error => "no_mnt_router_email_handle_value"
  }

  if ![no_mnt_router_email_handle_value] and [whois][mnt_router_email] != "" {
    mutate {
      replace => {
        "whois_mnt_router_email_label.key" => "whois_mnt_router_email"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "whois_mnt_router_email_label"
      }
    }
  }


  if [account_type] != "" {
    if [account_type] == "api_key" {
      mutate {
        replace => {
          "account_type" => "API Key"
        }
      }
    }
    else if [account_type] == "basic_auth" {
      mutate {
        replace => {
          "account_type" => "Basic Authentication"
        }
      }
    }

  }

  if [usage][used_queries] != "" {
    mutate {
      remove_field => ["used_queries"]
      on_error => "_"
    }

    mutate {
      rename => {
        "usage.used_queries" => "used_queries"
      }
      on_error => "invalid_used_queries"
    }
  }

  if [usage][remaining_queries] != "" {
    mutate {
      remove_field => ["remaining_queries"]
      on_error => "_"
    }

    mutate {
      rename => {
        "usage.remaining_queries" => "remaining_queries"
      }
      on_error => "invalid_remaining_query"
    }
  }

  if [usage][query_limit] != "" {
    mutate {
      remove_field => ["query_limit"]
      on_error => "_"
    }

    mutate {
      rename => {
        "usage.query_limit" => "query_limit"
      }
      on_error => "invalid_query_limit"
    }
  }

  if [usage][foundation_api_usage][used_queries] != "" {
    mutate {
      remove_field => ["used_foundation_queries"]
      on_error => "_"
    }

    mutate {
      rename => {
        "usage.foundation_api_usage.used_queries" => "used_foundation_queries"
      }
      on_error => "invalid_used_foundation_queries"
    }
  }

  if [usage][foundation_api_usage][remaining_queries] != "" {
    mutate {
      remove_field => ["remaining_foundation_queries"]
      on_error => "_"
    }

    mutate {
      rename => {
        "usage.foundation_api_usage.remaining_queries" =>
        "remaining_foundation_queries"
      }
      on_error => "invalid_used_remaining_queries"
    }
  }

  if [usage][foundation_api_usage][query_limit] != "" {
    mutate {
      remove_field => ["foundation_query_limit"]
      on_error => "_"
    }

    mutate {
      rename => {
        "usage.foundation_api_usage.query_limit" => "foundation_query_limit"
      }
      on_error => "invalid_foundation_query_limit"
    }
  }

  mutate {
    replace => {
      "account_type_label.value.string_value" => "%{account_type}"
    }
    on_error => "no_account_type_value"
  }

  if ![no_account_type_value] and [account_type] != "" {
    mutate {
      replace => {
        "account_type_label.key" => "account_type"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "account_type_label"
      }
    }
  }

  mutate {
    convert => {
      "used_queries" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "used_query_label.value.string_value" => "%{used_queries}"
    }
    on_error => "no_used_queries_value"
  }

  if ![no_used_queries_value] and [used_queries] != "" {
    mutate {
      replace => {
        "used_query_label.key" => "used_queries"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "used_query_label"
      }
    }
  }

  mutate {
    convert => {
      "remaining_queries" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "remaining_queries_label.value.string_value" => "%{remaining_queries}"
    }
    on_error => "no_remaining_queries_value"
  }

  if ![no_remaining_queries_value] and [remaining_queries] != "" {
    mutate {
      replace => {
        "remaining_queries_label.key" => "remaining_queries"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "remaining_queries_label"
      }
    }
  }

  mutate {
    convert => {
      "used_queries_percentage" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "used_queries_percentage_label.value.string_value" =>
      "%{used_queries_percentage}"
    }
    on_error => "no_used_queries_percentage_value"
  }

  if ![no_used_queries_percentage_value] and [used_queries_percentage] != "" {
    mutate {
      replace => {
        "used_queries_percentage_label.key" => "used_queries_percentage"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "used_queries_percentage_label"
      }
    }
  }

  mutate {
    convert => {
      "query_limit" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "query_limit_label.value.string_value" => "%{query_limit}"
    }
    on_error => "no_query_limit_value"
  }

  if ![no_query_limit_value] and [query_limit] != "" {
    mutate {
      replace => {
        "query_limit_label.key" => "query_limit"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "query_limit_label"
      }
    }
  }

  mutate {
    convert => {
      "used_foundation_queries" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "used_foundation_queries_label.value.string_value" =>
      "%{used_foundation_queries}"
    }
    on_error => "no_used_foundation_queries_value"
  }

  if ![no_used_foundation_queries_value] and [used_foundation_queries] != "" {
    mutate {
      replace => {
        "used_foundation_queries_label.key" => "used_foundation_queries"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "used_foundation_queries_label"
      }
    }
  }


  mutate {
    convert => {
      "remaining_foundation_queries" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "remaining_foundation_queries_label.value.string_value" =>
      "%{remaining_foundation_queries}"
    }
    on_error => "no_remaining_foundation_queries_value"
  }

  if ![no_remaining_foundation_queries_value]
  and [remaining_foundation_queries] != "" {
    mutate {
      replace => {
        "remaining_foundation_queries_label.key" =>
        "remaining_foundation_queries"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "remaining_foundation_queries_label"
      }
    }
  }

  mutate {
    convert => {
      "foundation_query_limit" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "foundation_query_limit_label.value.string_value" =>
      "%{foundation_query_limit}"
    }
    on_error => "no_foundation_query_limit_value"
  }

  if ![no_foundation_query_limit_value] and [foundation_query_limit] != "" {
    mutate {
      replace => {
        "foundation_query_limit_label.key" => "foundation_query_limit"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "foundation_query_limit_label"
      }
    }
  }

  mutate {
    convert => {
      "used_foundation_queries_percentage" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "used_foundation_queries_percentage_label.value.string_value" =>
      "%{used_foundation_queries_percentage}"
    }
    on_error => "no_used_foundation_queries_percentage_value"
  }

  if ![no_used_foundation_queries_percentage_value]
  and [used_foundation_queries_percentage] != "" {
    mutate {
      replace => {
        "used_foundation_queries_percentage_label.key" =>
        "used_foundation_queries_percentage"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "used_foundation_queries_percentage_label"
      }
    }
  }

  mutate {
    replace => {
      "event_type_label.value.string_value" => "%{event_type}"
    }
    on_error => "no_event_type_value"
  }

  if ![no_event_type_value] and [event_type] != "" {
    mutate {
      replace => {
        "event_type_label.key" => "event_type"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "event_type_label"
      }
    }
  }

  if [summary][last_seen] != "" {
    date {
      match => ["summary.last_seen", "yyyy-MM-dd", "yyyy-M-dd", "yyyy-MM-d", "yyyy-M-d"]
      target => "token_about.domain.last_seen_time"
      on_error => "invalid_last_seen"
    }
  }

  for index_info, code in country_codes {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "country_code_lable.value.string_value" => "%{code}"
      }
      on_error => "invalid_country_code"
    }

    if ![invalid_country_code] and [code] != "" {
      mutate {
        replace => {
          "country_code_lable.key" => "country_codes_%{index_info}"
        }
      }
    }

    mutate {
      merge => {
        "token_additional.fields" => "country_code_lable"
      }
      remove_field => ["country_code_lable"]
    }


  }

  if [country_code] != "" {
    mutate {
      replace => {
        "token_about.location.country_or_region" =>
        "%{country_code}"
      }
      on_error => "no_country_code_found"
    }
  }


  if [summary][geo_ip_cc] != "" {
    mutate {
      replace => {
        "token_about.location.country_or_region" =>
        "%{summary.geo_ip_cc}"
      }
      on_error => "no_summary_geo_ip_cc_found"
    }
  }

  mutate {
    convert => {
      "summary.whois.asn" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "who_asn_label.value.string_value" => "%{summary.whois.asn}"
    }
    on_error => "no_summary_whois_asn_value"
  }

  if ![no_summary_whois_asn_value] and [summary][whois][asn] != "" {
    mutate {
      replace => {
        "who_asn_label.key" => "whois_asn"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "who_asn_label"
      }
    }
  }

  mutate {
    convert => {
      "summary.whois.as_name" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "who_as_name_label.value.string_value" => "%{summary.whois.as_name}"
    }
    on_error => "no_whois_as_name_value"
  }

  if ![no_whois_as_name_value] and [summary][whois][as_name] != "" {
    mutate {
      replace => {
        "who_as_name_label.key" => "whois_as_name"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "who_as_name_label"
      }
    }
  }

  mutate {
    convert => {
      "summary.bgp_asn" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "bgp_asn_label.value.string_value" => "%{summary.bgp_asn}"
    }
    on_error => "no_bgp_asn_value"
  }

  if ![no_bgp_asn_value] and [summary][bgp_asn] != "" {
    mutate {
      replace => {
        "bgp_asn_label.key" => "summary_bgp_asn"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "bgp_asn_label"
      }
    }
  }

  mutate {
    convert => {
      "summary.bgp_asname" => "string"
    }
    on_error => "_"
  }
  mutate {
    replace => {
      "bgp_asname_label.value.string_value" => "%{summary.bgp_asname}"
    }
    on_error => "no_bgp_asname_value"
  }

  if ![no_bgp_asname_value] and [summary][bgp_asname] != "" {
    mutate {
      replace => {
        "bgp_asname_label.key" => "summary_bgp_asname"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "bgp_asname_label"
      }
    }
  }

  if [summary][whois][net_name] != "" {
    mutate {
      replace => {
        "token_about.domain.whois_server" => "%{summary.whois.net_name}"
      }
      on_error => "invalid_net_name"
    }
  }

  if [summary][whois][org_name] != "" {
    mutate {
      replace => {
        "token_about.network.organization_name" => "%{summary.whois.org_name}"
      }
      on_error => "invalid_org_name"
    }
  }


  for index_info,val in insights.insights {
    mutate {
      convert => {
        "val.message" => "string"
      }
      on_error => "_"
    }
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "val_message_label.value.string_value" => "%{val.message}"
      }
      on_error => "no_val_message_value"
    }

    if ![no_val_message_value] and [val][message] != "" {
      mutate {
        replace => {
          "val_message_label.key" => "insights_%{index_info}_message"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_message_label"
        }
        remove_field => ["val_message_label"]
      }
    }

    mutate {
      replace => {
        "val_rating_label.value.string_value" => "%{val.rating}"
      }
      on_error => "no_val_rating_value"
    }

    if ![no_val_rating_value] and [val][rating] != "" {
      mutate {
        replace => {
          "val_rating_label.key" => "insights_%{index_info}_rating"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_rating_label"
        }
        remove_field => ["val_rating_label"]
      }
    }
  }

  for index_info, val in as_info {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }
    mutate {
      convert => {
        "val.asn" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "val_asn_label.value.string_value" => "%{val.asn}"
      }
      on_error => "no_val_asn_value"
    }

    if ![no_val_asn_value] and [val][asn] != "" {
      mutate {
        replace => {
          "val_asn_label.key" => "as_info_%{index_info}_asn"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_asn_label"
        }
        remove_field => ["val_asn_label"]
      }
    }

    mutate {
      replace => {
        "val_asn_label.value.string_value" => "%{val.as_name}"
      }
      on_error => "no_val_as_name_value"
    }

    if ![no_val_as_name_value] and [val][as_name] != "" {
      mutate {
        replace => {
          "val_asn_label.key" => "as_info_%{index_info}_as_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_asn_label"
        }
        remove_field => ["val_asn_label"]
      }
    }
  }

  for index_info, val in tags {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      convert => {
        "val.id" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "val_tags_label.value.string_value" => "%{val.id}"
      }
      on_error => "no_val_tag_id_value"
    }

    if ![no_val_tag_id_value] and [val][id] != "" {
      mutate {
        replace => {
          "val_tags_label.key" => "tags_%{index_info}_id"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_tags_label"
        }
        remove_field => ["val_tags_label"]
      }
    }

    mutate {
      replace => {
        "val_tags_label.value.string_value" => "%{val.name}"
      }
      on_error => "no_val_tag_name_value"
    }

    if ![no_val_tag_name_value] and [val][name] != "" {
      mutate {
        replace => {
          "val_tags_label.key" => "tags_%{index_info}_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_tags_label"
        }
        remove_field => ["val_tags_label"]
      }
    }

    for child_index_info, children_arr in val.children {
      mutate {
        convert => {
          "child_index_info" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "children_arr.id" => "string"
        }
        on_error => "_"
      }
      mutate {
        replace => {
          "val_tags_children_label.value.string_value" => "%{children_arr.id}"
        }
        on_error => "no_val_child_id"
      }

      if ![no_val_child_id] and [children_arr][id] != "" {
        mutate {
          replace => {
            "val_tags_children_label.key" =>
            "tags_%{index_info}_children_%{child_index_info}_id"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_children_label"
          }
          remove_field => ["val_tags_children_label"]
        }
      }

      mutate {
        replace => {
          "val_tags_children_label.value.string_value" => "%{children_arr.name}"
        }
        on_error => "no_val_child_name"
      }

      if ![no_val_child_name] and [children_arr][name] != "" {
        mutate {
          replace => {
            "val_tags_children_label.key" =>
            "tags_%{index_info}_children_%{child_index_info}_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_children_label"
          }
          remove_field => ["val_tags_children_label"]
        }
      }

    }
  }

  mutate {
    replace => {
      "summary_tag.value.string_value" => "%{summary.start_date}"
    }
    on_error => "no_val_summary_start_date_value"
  }

  if ![no_val_summary_start_date_value] and [summary][start_date] != "" {
    mutate {
      replace => {
        "summary_tag.key" => "summary_start_date"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "summary_tag"
      }
    }
  }

  mutate {
    replace => {
      "summary_label.value.string_value" => "%{summary.end_date}"
    }
    on_error => "no_val_summary_end_date_value"
  }

  if ![no_val_summary_end_date_value] and [summary][end_date] != "" {
    mutate {
      replace => {
        "summary_label.key" => "summary_end_date"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "summary_label"
      }
    }
  }

  for index_info, val in summary.tags {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      convert => {
        "val.id" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "val_tags_label.value.string_value" => "%{val.id}"
      }
      on_error => "no_val_summary_tag_id_value"
    }

    if ![no_val_summary_tag_id_value] and [val][id] != "" {
      mutate {
        replace => {
          "val_tags_label.key" => "summary_tags_%{index_info}_id"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_tags_label"
        }
        remove_field => ["val_tags_label"]
      }
    }

    mutate {
      replace => {
        "val_tags_label.value.string_value" => "%{val.name}"
      }
      on_error => "no_val_summary_tag_name"
    }

    if ![no_val_summary_tag_name] and [val][name] != "" {
      mutate {
        replace => {
          "val_tags_label.key" => "summary_tags_%{index_info}_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_tags_label"
        }
        remove_field => ["val_tags_label"]
      }
    }

    for child_index_info, children_arr in val.children {
      mutate {
        convert => {
          "child_index_info" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "children_arr.id" => "string"
        }
        on_error => "_"
      }
      mutate {
        replace => {
          "val_tags_children_label.value.string_value" => "%{children_arr.id}"
        }
        on_error => "no_val_summary_child_id_value"
      }

      if ![no_val_summary_child_id_value] and [children_arr][id] != "" {
        mutate {
          replace => {
            "val_tags_children_label.key" =>
            "summary_tags_%{index_info}_children_%{child_index_info}_id"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_children_label"
          }
          remove_field => ["val_tags_children_label"]
        }
      }

      mutate {
        replace => {
          "val_tags_children_label.value.string_value" => "%{children_arr.name}"
        }
        on_error => "no_val_tag_child_name_value"
      }

      if ![no_val_tag_child_name_value] and [children_arr][name] != "" {
        mutate {
          replace => {
            "val_tags_children_label.key" =>
            "summary_tags_%{index_info}_children_%{child_index_info}_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_children_label"
          }
          remove_field => ["val_tags_children_label"]
        }
      }

    }
  }

  for index_info, tag_data_arr in summary.tag_timeline.data {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      convert => {
        "tag_data_arr.tag.id" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "tag_data_arr_label.value.string_value" => "%{tag_data_arr.tag.id}"
      }
      on_error => "no_val_timeline_tag_id_value"
    }

    if ![no_val_timeline_tag_id_value] and [tag_data_arr][tag][id] != "" {
      mutate {
        replace => {
          "tag_data_arr_label.key" =>
          "summary_tag_timeline_data_%{index_info}_tag_id"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "tag_data_arr_label"
        }
        remove_field => ["tag_data_arr_label"]
      }
    }

    mutate {
      replace => {
        "tag_data_arr_label.value.string_value" => "%{tag_data_arr.tag.name}"
      }
      on_error => "no_val_tag_timeline_name_value"
    }

    if ![no_val_tag_timeline_name_value] and [tag_data_arr][tag][name] != "" {
      mutate {
        replace => {
          "tag_data_arr_label.key" =>
          "summary_tag_timeline_data_%{index_info}_tag_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "tag_data_arr_label"
        }
        remove_field => ["tag_data_arr_label"]
      }
    }

    mutate {
      replace => {
        "tag_data_arr_label.value.string_value" =>
        "%{tag_data_arr.tag.description}"
      }
      on_error => "no_val_description_value"
    }

    if ![no_val_description_value] and [tag_data_arr][tag][description] != "" {
      mutate {
        replace => {
          "tag_data_arr_label.key" =>
          "summary_tag_timeline_data_%{index_info}_tag_description"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "tag_data_arr_label"
        }
        remove_field => ["tag_data_arr_label"]
      }
    }

    mutate {
      replace => {
        "tag_data_arr_label.value.string_value" =>
        "%{tag_data_arr.tag.css_color}"
      }
      on_error => "no_val_css_color_value"
    }

    if ![no_val_css_color_value] and [tag_data_arr][tag][css_color] != "" {
      mutate {
        replace => {
          "tag_data_arr_label.key" =>
          "summary_tag_timeline_data_%{index_info}_tag_css_color"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "tag_data_arr_label"
        }
        remove_field => ["tag_data_arr_label"]
      }
    }

    mutate {
      replace => {
        "tag_data_arr_label.value.string_value" => "%{tag_data_arr.first_seen}"
      }
      on_error => "no_val_first_seen_value"
    }

    if ![no_val_first_seen_value] and [tag_data_arr][first_seen] != "" {
      mutate {
        replace => {
          "tag_data_arr_label.key" =>
          "summary_tag_timeline_data_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "tag_data_arr_label"
        }
        remove_field => ["tag_data_arr_label"]
      }
    }

    mutate {
      replace => {
        "tag_data_arr_label.value.string_value" => "%{tag_data_arr.last_seen}"
      }
      on_error => "no_val_last_seen_value"
    }

    if ![no_val_last_seen_value] and [tag_data_arr][last_seen] != "" {
      mutate {
        replace => {
          "tag_data_arr_label.key" =>
          "summary_tag_timeline_data_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "tag_data_arr_label"
        }
        remove_field => ["tag_data_arr_label"]
      }
    }

  }

  for index_info, x509_arr in x509.x509 {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "issuer_label.value.string_value" => "%{x509_arr.issuer}"
      }
      on_error => "no_x509_issuer_found"
    }
    if ![no_x509_issuer_found] and [x509_arr][issuer] != "" {
      mutate {
        replace => {
          "issuer_label.key" => "x509_%{index_info}_issuer"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "issuer_label"
        }
        remove_field => ["issuer_label"]
      }
    }

    mutate {
      replace => {
        "ip_label.value.string_value" => "%{x509_arr.ip}"
      }
      on_error => "no_x509_ip_found"
    }
    if ![no_x509_ip_found] and [x509_arr][ip] != "" {
      mutate {
        replace => {
          "ip_label.key" => "x509_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "ip_label"
        }
        remove_field => ["ip_label"]
      }
    }

    mutate {
      replace => {
        "issuer_common_name_label.value.string_value" =>
        "%{x509_arr.issuer_common_name}"
      }
      on_error => "no_x509_issuer_found"
    }
    if ![no_x509_issuer_found] and [x509_arr][issuer_common_name] != "" {
      mutate {
        replace => {
          "issuer_common_name_label.key" =>
          "x509_%{index_info}_issuer_common_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "issuer_common_name_label"
        }
        remove_field => ["issuer_common_name_label"]
      }
    }

    mutate {
      replace => {
        "common_name_label.value.string_value" => "%{x509_arr.common_name}"
      }
      on_error => "no_x509_common_name_found"
    }
    if ![no_x509_common_name_found] and [x509_arr][common_name] != "" {
      mutate {
        replace => {
          "common_name_label.key" => "x509_%{index_info}_common_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "common_name_label"
        }
        remove_field => ["common_name_label"]
      }
    }

    mutate {
      replace => {
        "serial_label.value.string_value" => "%{x509_arr.serial}"
      }
      on_error => "no_x509_serial_found"
    }
    if ![no_x509_serial_found] and [x509_arr][serial] != "" {
      mutate {
        replace => {
          "serial_label.key" => "x509_%{index_info}_serial"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "serial_label"
        }
        remove_field => ["serial_label"]
      }
    }

    mutate {
      replace => {
        "human_readable_label.value.string_value" =>
        "%{x509_arr.human_readable}"
      }
      on_error => "no_x509_human_readable_found"
    }
    if ![no_x509_human_readable_found] and [x509_arr][human_readable] != "" {
      mutate {
        replace => {
          "human_readable_label.key" => "x509_%{index_info}_human_readable"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "human_readable_label"
        }
        remove_field => ["human_readable_label"]
      }
    }

    mutate {
      replace => {
        "validity_period_label.value.string_value" =>
        "%{x509_arr.validity_period}"
      }
      on_error => "no_x509_validity_period_found"
    }
    if ![no_x509_validity_period_found] and [x509_arr][validity_period] != "" {
      mutate {
        replace => {
          "validity_period_label.key" => "x509_%{index_info}_validity_period"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "validity_period_label"
        }
        remove_field => ["validity_period_label"]
      }
    }

    mutate {
      replace => {
        "subject_label.value.string_value" => "%{x509_arr.subject}"
      }
      on_error => "no_x509_subject_found"
    }
    if ![no_x509_subject_found] and [x509_arr][subject] != "" {
      mutate {
        replace => {
          "subject_label.key" => "x509_%{index_info}_subject"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "subject_label"
        }
        remove_field => ["subject_label"]
      }
    }

    mutate {
      convert => {
        "x509_arr.port" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.port}"
      }
      on_error => "no_x509_arr_port_found"
    }

    if ![no_x509_arr_port_found] and [x509_arr][port] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      convert => {
        "x509_arr.count" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.count}"
      }
      on_error => "no_x509_arr_count_found"
    }

    if ![no_x509_arr_count_found] and [x509_arr][count] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.first_seen}"
      }
      on_error => "no_x509_first_seen_found"
    }

    if ![no_x509_first_seen_found] and [x509_arr][first_seen] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.last_seen}"
      }
      on_error => "no_x509_last_seen_found"
    }

    if ![no_x509_last_seen_found] and [x509_arr][last_seen] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.not_before}"
      }
      on_error => "no_x509_before_found"
    }

    if ![no_x509_before_found] and [x509_arr][not_before] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_not_before"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.not_after}"
      }
      on_error => "no_x509_after_found"
    }

    if ![no_x509_after_found] and [x509_arr][not_after] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_not_after"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.md5}"
      }
      on_error => "no_x509_md5_found"
    }

    if ![no_x509_md5_found] and [x509_arr][md5] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_md5"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.sha1}"
      }
      on_error => "no_x509_sha1_found"
    }

    if ![no_x509_sha1_found] and [x509_arr][sha1] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_sha1"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.sha256}"
      }
      on_error => "no_x509_sha256_found"
    }

    if ![no_x509_sha256_found] and [x509_arr][sha256] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_sha256"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    mutate {
      convert => {
        "x509_arr.self_signed" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "x509_arr_label.value.string_value" => "%{x509_arr.self_signed}"
      }
      on_error => "no_x509_self_signed_found"
    }

    if ![no_x509_self_signed_found] and [x509_arr][self_signed] != "" {
      mutate {
        replace => {
          "x509_arr_label.key" => "x509_%{index_info}_self_signed"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "x509_arr_label"
        }
        remove_field => ["x509_arr_label"]
      }
    }

    for tag_info, val in x509_arr.tags {
      mutate {
        convert => {
          "tag_info" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "val.id" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "val_tags_label.value.string_value" => "%{val.id}"
        }
        on_error => "no_x509_tag_id_value"
      }

      if ![no_x509_tag_id_value] and [val][id] != "" {
        mutate {
          replace => {
            "val_tags_label.key" => "x509_%{index_info}_tags_%{tag_info}_id"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_label"
          }
          remove_field => ["val_tags_label"]
        }
      }

      mutate {
        replace => {
          "val_tags_label.value.string_value" => "%{val.name}"
        }
        on_error => "no_val_tag_x509_name_value"
      }

      if ![no_val_tag_x509_name_value] and [val][name] != "" {
        mutate {
          replace => {
            "val_tags_label.key" => "x509_%{index_info}_tags_%{tag_info}_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_label"
          }
          remove_field => ["val_tags_label"]
        }
      }

      for child_tag_info, children_arr in val.children {
        mutate {
          convert => {
            "child_tag_info" => "string"
          }
          on_error => "_"
        }

        mutate {
          convert => {
            "children_arr.id" => "string"
          }
          on_error => "_"
        }
        mutate {
          replace => {
            "val_tags_children_label.value.string_value" => "%{children_arr.id}"
          }
          on_error => "no_val_x509_child_tag_id_value"
        }

        if ![no_val_x509_child_tag_id_value] and [children_arr][id] != "" {
          mutate {
            replace => {
              "val_tags_children_label.key" =>
              "x509_%{index_info}_tags_%{tag_info}_children_%{child_tag_info}_id"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "val_tags_children_label"
            }
            remove_field => ["val_tags_children_label"]
          }
        }

        mutate {
          replace => {
            "val_tags_children_label.value.string_value" =>
            "%{children_arr.name}"
          }
          on_error => "no_val_x509_tag_child_name_value"
        }

        if ![no_val_x509_tag_child_name_value] and [children_arr][name] != "" {
          mutate {
            replace => {
              "val_tags_children_label.key" =>
              "x509_%{index_info}_tags_%{tag_info}_children_%{child_tag_info}_name"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "val_tags_children_label"
            }
            remove_field => ["val_tags_children_label"]
          }
        }

      }
    }

    for index_alt, alt_arr in x509_arr.altnames {
      mutate {
        convert => {
          "index_alt" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "alt_names_label.value.string_value" => "%{alt_arr}"
        }
        on_error => "no_alt_names_value"
      }

      if ![no_alt_names_value] and [alt_arr] != "" {
        mutate {
          replace => {
            "alt_names_label.key" => "x509_%{index_info}_altnames_%{index_alt}"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "alt_names_label"
          }
          remove_field => ["alt_names_label"]
        }
      }

    }

    for code_index_info, code in x509_arr.country_codes {
      mutate {
        convert => {
          "code_index_info" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "country_code_lable.value.string_value" => "%{code}"
        }
        on_error => "invalid_x509_country_code"
      }

      if ![invalid_x509_country_code] and [code] != "" {
        mutate {
          replace => {
            "country_code_lable.key" =>
            "x509_%{index_info}_country_codes_%{code_index_info}"
          }
        }
      }

      mutate {
        merge => {
          "token_additional.fields" => "country_code_lable"
        }
        remove_field => ["country_code_lable"]
      }
    }

    for info_index, val in x509_arr.as_info {
      mutate {
        convert => {
          "info_index" => "string"
        }
        on_error => "_"
      }
      mutate {
        convert => {
          "val.asn" => "string"
        }
        on_error => "_"
      }
      mutate {
        replace => {
          "val_asn_label.value.string_value" => "%{val.asn}"
        }
        on_error => "no_val_x509_asn_value"
      }

      if ![no_val_x509_asn_value] and [val][asn] != "" {
        mutate {
          replace => {
            "val_asn_label.key" =>
            "x509_%{index_info}_as_info_%{info_index}_asn"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_asn_label"
          }
          remove_field => ["val_asn_label"]
        }
      }

      mutate {
        replace => {
          "val_asn_label.value.string_value" => "%{val.as_name}"
        }
        on_error => "no_val_x509_as_name_value"
      }

      if ![no_val_x509_as_name_value] and [val][as_name] != "" {
        mutate {
          replace => {
            "val_asn_label.key" =>
            "x509_%{index_info}_as_info_%{info_index}_as_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_asn_label"
          }
          remove_field => ["val_asn_label"]
        }
      }
    }
  }

  for index_info, certs_arr in summary.certs.top_certs {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "issuer_label.value.string_value" => "%{certs_arr.issuer}"
      }
      on_error => "no_top_certs_issuer_found"
    }
    if ![no_top_certs_issuer_found] and [certs_arr][issuer] != "" {
      mutate {
        replace => {
          "issuer_label.key" => "summary_certs_top_certs_%{index_info}_issuer"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "issuer_label"
        }
        remove_field => ["issuer_label"]
      }
    }

    mutate {
      convert => {
        "certs_arr.valid_days" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "valid_days_label.value.string_value" => "%{certs_arr.valid_days}"
      }
      on_error => "no_tops_certs_valid_days_found"
    }
    if ![no_tops_certs_valid_days_found] and [certs_arr][valid_days] != "" {
      mutate {
        replace => {
          "valid_days_label.key" =>
          "summary_certs_top_certs_%{index_info}_valid_days"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "valid_days_label"
        }
        remove_field => ["valid_days_label"]
      }
    }

    mutate {
      replace => {
        "issuer_common_name_label.value.string_value" =>
        "%{certs_arr.issuer_common_name}"
      }
      on_error => "no_top_certs_issuer_common_found"
    }
    if ![no_top_certs_issuer_common_found]
    and [certs_arr][issuer_common_name] != "" {
      mutate {
        replace => {
          "issuer_common_name_label.key" =>
          "summary_certs_top_certs_%{index_info}_issuer_common_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "issuer_common_name_label"
        }
        remove_field => ["issuer_common_name_label"]
      }
    }

    mutate {
      replace => {
        "subject_label.value.string_value" => "%{certs_arr.subject}"
      }
      on_error => "no_top_certs_subject_found"
    }
    if ![no_top_certs_subject_found] and [certs_arr][subject] != "" {
      mutate {
        replace => {
          "subject_label.key" => "summary_certs_top_certs_%{index_info}_subject"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "subject_label"
        }
        remove_field => ["subject_label"]
      }
    }

    mutate {
      convert => {
        "certs_arr.port" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.port}"
      }
      on_error => "no_top_certs_arr_port_found"
    }

    if ![no_top_certs_arr_port_found] and [certs_arr][port] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_top_certs_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.first_seen}"
      }
      on_error => "no_certs_first_seen_found"
    }

    if ![no_certs_first_seen_found] and [certs_arr][first_seen] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_top_certs_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.last_seen}"
      }
      on_error => "no_certs_last_seen_found"
    }

    if ![no_certs_last_seen_found] and [certs_arr][last_seen] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_top_certs_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.not_before}"
      }
      on_error => "no_not_before_found"
    }

    if ![no_not_before_found] and [certs_arr][not_before] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_top_certs_%{index_info}_not_before"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.not_after}"
      }
      on_error => "no_not_after_found"
    }

    if ![no_not_after_found] and [certs_arr][not_after] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_top_certs_%{index_info}_not_after"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.md5}"
      }
      on_error => "no_md5_found"
    }

    if ![no_md5_found] and [certs_arr][md5] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_top_certs_%{index_info}_md5"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.sha1}"
      }
      on_error => "no_sha1_found"
    }

    if ![no_sha1_found] and [certs_arr][sha1] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_top_certs_%{index_info}_sha1"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.sha256}"
      }
      on_error => "no_sha256_found"
    }

    if ![no_sha256_found] and [certs_arr][sha256] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_top_certs_%{index_info}_sha256"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      convert => {
        "certs_arr.self_signed" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.self_signed}"
      }
      on_error => "no_self_signed_found"
    }

    if ![no_self_signed_found] and [certs_arr][self_signed] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_top_certs_%{index_info}_self_signed"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      convert => {
        "certs_arr.common_name" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.common_name}"
      }
      on_error => "no_common_name_found"
    }

    if ![no_common_name_found] and [certs_arr][common_name] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_top_certs_%{index_info}_common_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }
  }

  for index_info, val in summary.insights.insights {
    mutate {
      convert => {
        "val.message" => "string"
      }
      on_error => "_"
    }
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "val_message_label.value.string_value" => "%{val.message}"
      }
      on_error => "no_val_summary_message_value"
    }

    if ![no_val_summary_message_value] and [val][message] != "" {
      mutate {
        replace => {
          "val_message_label.key" => "summary_insights_%{index_info}_message"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_message_label"
        }
        remove_field => ["val_message_label"]
      }
    }

    mutate {
      replace => {
        "val_rating_label.value.string_value" => "%{val.rating}"
      }
      on_error => "no_val_summary_rating_value"
    }

    if ![no_val_summary_rating_value] and [val][rating] != "" {
      mutate {
        replace => {
          "val_rating_label.key" => "summary_insights_%{index_info}_rating"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "val_rating_label"
        }
        remove_field => ["val_rating_label"]
      }
    }

  }

  for index, top_open_ports_arr in open_ports.open_ports {
    mutate {
      convert => {
        "index" => "string"
      }
      on_error => "_"
    }

    mutate {
      convert => {
        "top_open_ports_arr.event_count" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "event_count_label.value.string_value" =>
        "%{top_open_ports_arr.event_count}"
      }
      on_error => "no_open_port_event_count_found"
    }
    if ![no_open_port_event_count_found]
    and [top_open_ports_arr][event_count] != "" {
      mutate {
        replace => {
          "event_count_label.key" => "open_ports_%{index}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "event_count_label"
        }
        remove_field => ["event_count_label"]
      }
    }

    mutate {
      convert => {
        "top_open_ports_arr.port" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "port_label.value.string_value" => "%{top_open_ports_arr.port}"
      }
      on_error => "no_open_port_found"
    }
    if ![no_open_port_found] and [top_open_ports_arr][port] != "" {
      mutate {
        replace => {
          "port_label.key" => "open_ports_%{index}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "port_label"
        }
        remove_field => ["port_label"]
      }
    }

    mutate {
      convert => {
        "top_open_ports_arr.protocol" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "protocol_label.value.string_value" => "%{top_open_ports_arr.protocol}"
      }
      on_error => "no_protocol_found"
    }
    if ![no_protocol_found] and [top_open_ports_arr][protocol] != "" {
      mutate {
        replace => {
          "protocol_label.key" => "open_ports_%{index}_protocol"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "protocol_label"
        }
        remove_field => ["protocol_label"]
      }
    }

    mutate {
      replace => {
        "protocol_text_label.value.string_value" =>
        "%{top_open_ports_arr.protocol_text}"
      }
      on_error => "no_protocol_text_found"
    }
    if ![no_protocol_text_found] and [top_open_ports_arr][protocol_text] != "" {
      mutate {
        replace => {
          "protocol_text_label.key" => "open_ports_%{index}_protocol_text"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "protocol_text_label"
        }
        remove_field => ["protocol_text_label"]
      }
    }

    mutate {
      replace => {
        "service_label.value.string_value" => "%{top_open_ports_arr.service}"
      }
      on_error => "no_service_found"
    }
    if ![no_service_found] and [top_open_ports_arr][service] != "" {
      mutate {
        replace => {
          "service_label.key" => "open_ports_%{index}_service"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_label"
        }
        remove_field => ["service_label"]
      }
    }

    mutate {
      replace => {
        "first_seen_label.value.string_value" =>
        "%{top_open_ports_arr.first_seen}"
      }
      on_error => "no_first_seen_found"
    }

    if ![no_first_seen_found] and [top_open_ports_arr][first_seen] != "" {
      mutate {
        replace => {
          "first_seen_label.key" => "open_ports_%{index}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "first_seen_label"
        }
        remove_field => ["first_seen_label"]
      }
    }

    mutate {
      replace => {
        "last_seen_label.value.string_value" =>
        "%{top_open_ports_arr.last_seen}"
      }
      on_error => "no_last_seen_found"
    }

    if ![no_last_seen_found] and [top_open_ports_arr][last_seen] != "" {
      mutate {
        replace => {
          "last_seen_label.key" => "open_ports_%{index}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "last_seen_label"
        }
        remove_field => ["last_seen_label"]
      }
    }

    mutate {
      replace => {
        "banner_label.value.string_value" => "%{top_open_ports_arr.banner}"
      }
      on_error => "no_banner_found"
    }

    if ![no_banner_found] and [top_open_ports_arr][banner] != "" {
      mutate {
        replace => {
          "banner_label.key" => "open_ports_%{index}_banner"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "banner_label"
        }
        remove_field => ["banner_label"]
      }
    }

    mutate {
      replace => {
        "ip_label.value.string_value" => "%{top_open_ports_arr.ip}"
      }
      on_error => "no_open_ports_port_ip_found"
    }

    if ![no_open_ports_port_ip_found] and [top_open_ports_arr][ip] != "" {
      mutate {
        replace => {
          "ip_label.key" => "open_ports_%{index}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "ip_label"
        }
        remove_field => ["ip_label"]
      }
    }

    mutate {
      replace => {
        "banner_sha1_label.value.string_value" =>
        "%{top_open_ports_arr.banner_sha1}"
      }
      on_error => "no_banner_sha1_found"
    }

    if ![no_banner_sha1_found] and [top_open_ports_arr][banner_sha1] != "" {
      mutate {
        replace => {
          "banner_sha1_label.key" => "open_ports_%{index}_banner_sha1"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "banner_sha1_label"
        }
        remove_field => ["banner_sha1_label"]
      }
    }

    for code_index_info, code in top_open_ports_arr.country_codes {
      mutate {
        convert => {
          "code_index_info" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "country_code_lable.value.string_value" => "%{code}"
        }
        on_error => "invalid_open_port_country_code"
      }

      if ![invalid_open_port_country_code] and [code] != "" {
        mutate {
          replace => {
            "country_code_lable.key" =>
            "open_ports_%{index}_country_codes_%{code_index_info}"
          }
        }
      }

      mutate {
        merge => {
          "token_additional.fields" => "country_code_lable"
        }
        remove_field => ["country_code_lable"]
      }
    }

    for index_info, val in top_open_ports_arr.as_info {
      mutate {
        convert => {
          "index_info" => "string"
        }
        on_error => "_"
      }
      mutate {
        convert => {
          "val.asn" => "string"
        }
        on_error => "_"
      }
      mutate {
        replace => {
          "val_asn_label.value.string_value" => "%{val.asn}"
        }
        on_error => "no_val_open_port_asn_value"
      }

      if ![no_val_open_port_asn_value] and [val][asn] != "" {
        mutate {
          replace => {
            "val_asn_label.key" =>
            "open_ports_%{index}_as_info_%{index_info}_asn"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_asn_label"
          }
          remove_field => ["val_asn_label"]
        }
      }

      mutate {
        replace => {
          "val_asn_label.value.string_value" => "%{val.as_name}"
        }
        on_error => "no_val_open_port_as_name_value"
      }

      if ![no_val_open_port_as_name_value] and [val][as_name] != "" {
        mutate {
          replace => {
            "val_asn_label.key" =>
            "open_ports_%{index}_as_info_%{index_info}_as_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_asn_label"
          }
          remove_field => ["val_asn_label"]
        }
      }
    }

    for tag_index, val in top_open_ports_arr.tags {
      mutate {
        convert => {
          "tag_index" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "val.id" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "val_tags_label.value.string_value" => "%{val.id}"
        }
        on_error => "no_val_open_port_tage_id_value"
      }

      if ![no_val_open_port_tage_id_value] and [val][id] != "" {
        mutate {
          replace => {
            "val_tags_label.key" => "open_ports_%{index}_tags_%{tag_index}_id"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_label"
          }
          remove_field => ["val_tags_label"]
        }
      }

      mutate {
        replace => {
          "val_tags_label.value.string_value" => "%{val.name}"
        }
        on_error => "no_val_tag_open_port_name_value"
      }

      if ![no_val_tag_open_port_name_value] and [val][name] != "" {
        mutate {
          replace => {
            "val_tags_label.key" => "open_ports_%{index}_tags_%{tag_index}_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_tags_label"
          }
          remove_field => ["val_tags_label"]
        }
      }

      for child_index_info, children_arr in val.children {
        mutate {
          convert => {
            "child_index_info" => "string"
          }
          on_error => "_"
        }

        mutate {
          convert => {
            "children_arr.id" => "string"
          }
          on_error => "_"
        }
        mutate {
          replace => {
            "val_tags_children_label.value.string_value" => "%{children_arr.id}"
          }
          on_error => "no_val_open_port_tag_child_id_value"
        }

        if ![no_val_open_port_tag_child_id_value] and [children_arr][id] != "" {
          mutate {
            replace => {
              "val_tags_children_label.key" =>
              "open_ports_%{index}_tags_%{tag_index}_children_%{child_index_info}_id"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "val_tags_children_label"
            }
            remove_field => ["val_tags_children_label"]
          }
        }

        mutate {
          replace => {
            "val_tags_children_label.value.string_value" =>
            "%{children_arr.name}"
          }
          on_error => "no_val_open_port_tag_child_name_value"
        }

        if ![no_val_open_port_tag_child_name_value]
        and [children_arr][name] != "" {
          mutate {
            replace => {
              "val_tags_children_label.key" =>
              "open_ports_%{index}_tags_%{tag_index}_children_%{child_index_info}_name"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "val_tags_children_label"
            }
            remove_field => ["val_tags_children_label"]
          }
        }

      }
    }
  }

  for index_info, open_ports_arr in summary.open_ports.top_open_ports {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      convert => {
        "open_ports_arr.port" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.port}"
      }
      on_error => "no_top_ports_port_found"
    }

    if ![no_top_ports_port_found] and [open_ports_arr][port] != "" {
      mutate {
        replace => {
          "open_ports_label.key" => "summary_top_open_ports_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      convert => {
        "open_ports_arr.protocol" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.protocol}"
      }
      on_error => "no_top_ports_protocol_found"
    }

    if ![no_top_ports_protocol_found] and [open_ports_arr][protocol] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_top_open_ports_%{index_info}_protocol"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      replace => {
        "open_ports_label.value.string_value" =>
        "%{open_ports_arr.protocol_text}"
      }
      on_error => "no_top_ports_protocol_text_found"
    }

    if ![no_top_ports_protocol_text_found]
    and [open_ports_arr][protocol_text] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_top_open_ports_%{index_info}_protocol_text"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.service}"
      }
      on_error => "no_top_ports_service_found"
    }

    if ![no_top_ports_service_found] and [open_ports_arr][service] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_top_open_ports_%{index_info}_service"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      convert => {
        "open_ports_arr.event_count" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.event_count}"
      }
      on_error => "no_top_ports_event_count_found"
    }

    if ![no_top_ports_event_count_found]
    and [open_ports_arr][event_count] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_top_open_ports_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.first_seen}"
      }
      on_error => "no_top_ports_first_seen_found"
    }

    if ![no_top_ports_first_seen_found] and [open_ports_arr][first_seen] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_top_open_ports_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.last_seen}"
      }
      on_error => "no_top_ports_last_seen_found"
    }

    if ![no_top_ports_last_seen_found] and [open_ports_arr][last_seen] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_top_open_ports_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.css_color}"
      }
      on_error => "no_top_ports_css_color_found"
    }

    if ![no_top_ports_css_color_found] and [open_ports_arr][css_color] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_top_open_ports_%{index_info}_css_color"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }
  }

  for index_info, open_ports_arr in summary.open_ports {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.ip}"
      }
      on_error => "no_open_ports_ip_found"
    }

    if ![no_open_ports_ip_found] and [open_ports_arr][ip] != "" {
      mutate {
        replace => {
          "open_ports_label.key" => "summary_open_ports_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      convert => {
        "open_ports_arr.port" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.port}"
      }
      on_error => "no_open_ports_port_found"
    }

    if ![no_open_ports_port_found] and [open_ports_arr][port] != "" {
      mutate {
        replace => {
          "open_ports_label.key" => "summary_open_ports_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      convert => {
        "open_ports_arr.protocol" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.protocol}"
      }
      on_error => "no_open_ports_protocol_found"
    }

    if ![no_open_ports_protocol_found] and [open_ports_arr][protocol] != "" {
      mutate {
        replace => {
          "open_ports_label.key" => "summary_open_ports_%{index_info}_protocol"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      replace => {
        "open_ports_label.value.string_value" =>
        "%{open_ports_arr.protocol_text}"
      }
      on_error => "no_open_ports_protocol_text_found"
    }

    if ![no_open_ports_protocol_text_found]
    and [open_ports_arr][protocol_text] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_open_ports_%{index_info}_protocol_text"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.service}"
      }
      on_error => "no_open_ports_service_found"
    }

    if ![no_open_ports_service_found] and [open_ports_arr][service] != "" {
      mutate {
        replace => {
          "open_ports_label.key" => "summary_open_ports_%{index_info}_service"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }

    mutate {
      convert => {
        "open_ports_arr.event_count" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "open_ports_label.value.string_value" => "%{open_ports_arr.event_count}"
      }
      on_error => "no_open_ports_event_count_found"
    }

    if ![no_open_ports_event_count_found]
    and [open_ports_arr][event_count] != "" {
      mutate {
        replace => {
          "open_ports_label.key" =>
          "summary_open_ports_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "open_ports_label"
        }
        remove_field => ["open_ports_label"]
      }
    }
  }

  for index_info, pdns_arr in pdns.pdns {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.ip}"
      }
      on_error => "no_pdns_arr_ip_found"
    }

    if ![no_pdns_arr_ip_found] and [pdns_arr][ip] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.domain}"
      }
      on_error => "no_pdns_arr_domain_found"
    }

    if ![no_pdns_arr_domain_found] and [pdns_arr][domain] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_domain"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.first_seen}"
      }
      on_error => "no_pdns_arr_first_seen_found"
    }

    if ![no_pdns_arr_first_seen_found] and [pdns_arr][first_seen] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.last_seen}"
      }
      on_error => "no_pdns_arr_last_seen_found"
    }

    if ![no_pdns_arr_last_seen_found] and [pdns_arr][last_seen] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      convert => {
        "pdns_arr.distinct_ips" => "string"
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.distinct_ips}"
      }
      on_error => "no_pdns_arr_distinct_ips_found"
    }

    if ![no_pdns_arr_distinct_ips_found] and [pdns_arr][distinct_ips] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_distinct_ips"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      convert => {
        "pdns_arr.active_days" => "string"
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.active_days}"
      }
      on_error => "no_pdns_arr_active_days_found"
    }

    if ![no_pdns_arr_active_days_found] and [pdns_arr][active_days] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_active_days"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      convert => {
        "pdns_arr.event_count" => "string"
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.event_count}"
      }
      on_error => "no_pdns_arr_event_count_found"
    }

    if ![no_pdns_arr_event_count_found] and [pdns_arr][event_count] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.root}"
      }
      on_error => "no_pdns_arr_root_found"
    }

    if ![no_pdns_arr_root_found] and [pdns_arr][root] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_root"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.tld}"
      }
      on_error => "no_pdns_arr_tld_found"
    }

    if ![no_pdns_arr_tld_found] and [pdns_arr][tld] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_tld"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.type}"
      }
      on_error => "no_pdns_arr_type_found"
    }

    if ![no_pdns_arr_type_found] and [pdns_arr][type] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_type"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.registrar}"
      }
      on_error => "no_pdns_arr_registrar_found"
    }

    if ![no_pdns_arr_registrar_found] and [pdns_arr][registrar] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_registrar"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.domain_created}"
      }
      on_error => "no_pdns_arr_domain_created_found"
    }

    if ![no_pdns_arr_domain_created_found]
    and [pdns_arr][domain_created] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_domain_created"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.domain_expires}"
      }
      on_error => "no_pdns_arr_domain_expires_found"
    }

    if ![no_pdns_arr_domain_expires_found]
    and [pdns_arr][domain_expires] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "pdns_%{index_info}_domain_expires"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    for server_index, server in pdns_arr.nameservers {
      mutate {
        convert => {
          "server_index" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "pdns_arr_label.value.string_value" => "%{server.root}"
        }
        on_error => "no_pdns_server_arr_root_found"
      }

      if ![no_pdns_server_arr_root_found] and [server][root] != "" {
        mutate {
          replace => {
            "pdns_arr_label.key" =>
            "pdns_%{index_info}_nameservers_%{server_index}_root"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "pdns_arr_label"
          }
          remove_field => ["pdns_arr_label"]
        }
      }

      for name_index, val in server.nameservers {
        mutate {
          convert => {
            "name_index" => "string"
          }
          on_error => "_"
        }

        mutate {
          replace => {
            "pdns_arr_label.value.string_value" => "%{val}"
          }
          on_error => "no_pdns_nameserver_arr_root_found"
        }

        if ![no_pdns_nameserver_arr_root_found] and [val] != "" {
          mutate {
            replace => {
              "pdns_arr_label.key" =>
              "pdns_%{index_info}_nameservers_%{server_index}_server_%{name_index}"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "pdns_arr_label"
            }
            remove_field => ["pdns_arr_label"]
          }
        }
      }
    }

    for code_index, code in pdns_arr.country_codes {
      mutate {
        convert => {
          "code_index" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "country_code_lable.value.string_value" => "%{code}"
        }
        on_error => "invalid_pdns_country_code"
      }

      if ![invalid_pdns_country_code] and [code] != "" {
        mutate {
          replace => {
            "country_code_lable.key" =>
            "pdns_%{index_info}_country_codes_%{code_index}"
          }
        }
      }

      mutate {
        merge => {
          "token_additional.fields" => "country_code_lable"
        }
        remove_field => ["country_code_lable"]
      }
    }

    for as_index, val in pdns_arr.as_info {
      mutate {
        convert => {
          "as_index" => "string"
        }
        on_error => "_"
      }
      mutate {
        convert => {
          "val.asn" => "string"
        }
        on_error => "_"
      }
      mutate {
        replace => {
          "val_asn_label.value.string_value" => "%{val.asn}"
        }
        on_error => "no_val_info_asn_value"
      }

      if ![no_val_info_asn_value] and [val][asn] != "" {
        mutate {
          replace => {
            "val_asn_label.key" => "pdns_%{index_info}_as_info_%{as_index}_asn"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_asn_label"
          }
          remove_field => ["val_asn_label"]
        }
      }

      mutate {
        replace => {
          "val_asn_label.value.string_value" => "%{val.as_name}"
        }
        on_error => "no_val_pdns_as_name_value"
      }

      if ![no_val_pdns_as_name_value] and [val][as_name] != "" {
        mutate {
          replace => {
            "val_asn_label.key" =>
            "pdns_%{index_info}_as_info_%{as_index}_as_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "val_asn_label"
          }
          remove_field => ["val_asn_label"]
        }
      }
    }


  }

  for index_info, pdns_arr in summary.pdns.top_pdns {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.domain}"
      }
      on_error => "no_top_pdns_summary_arr_domain_found"
    }

    if ![no_top_pdns_summary_arr_domain_found] and [pdns_arr][domain] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_top_pdns_%{index_info}_domain"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.first_seen}"
      }
      on_error => "no_top_pdns_summary_arr_first_seen_found"
    }

    if ![no_top_pdns_summary_arr_first_seen_found]
    and [pdns_arr][first_seen] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_top_pdns_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.last_seen}"
      }
      on_error => "no_top_pdns_summary_arr_last_seen_found"
    }

    if ![no_top_pdns_summary_arr_last_seen_found]
    and [pdns_arr][last_seen] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_top_pdns_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.css_color}"
      }
      on_error => "no_top_pdns_summary_arr_css_color_found"
    }

    if ![no_top_pdns_summary_arr_css_color_found]
    and [pdns_arr][css_color] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_top_pdns_%{index_info}_css_color"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      convert => {
        "pdns_arr.event_count" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.event_count}"
      }
      on_error => "no_top_pdns_summary_arr_event_count_found"
    }

    if ![no_top_pdns_summary_arr_event_count_found]
    and [pdns_arr][event_count] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_top_pdns_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }
  }


  for index_info, pdns_arr in summary.pdns {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.ip}"
      }
      on_error => "no_pdns_summary_arr_ip_found"
    }

    if ![no_pdns_summary_arr_ip_found] and [pdns_arr][ip] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_pdns_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.domain}"
      }
      on_error => "no_pdns_summary_arr_domain_found"
    }

    if ![no_pdns_summary_arr_domain_found] and [pdns_arr][domain] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_pdns_%{index_info}_domain"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }

    mutate {
      convert => {
        "pdns_arr.event_count" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "pdns_arr_label.value.string_value" => "%{pdns_arr.event_count}"
      }
      on_error => "no_pdns_summary_arr_event_count_found"
    }

    if ![no_pdns_summary_arr_event_count_found]
    and [pdns_arr][event_count] != "" {
      mutate {
        replace => {
          "pdns_arr_label.key" => "summary_pdns_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "pdns_arr_label"
        }
        remove_field => ["pdns_arr_label"]
      }
    }
  }

  for index_info, top_peers_arr in summary.top_peers {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "top_peers_arr_label.value.string_value" => "%{top_peers_arr.ip}"
      }
      on_error => "no_top_peers_arr_ip_found"
    }

    if ![no_top_peers_arr_ip_found] and [top_peers_arr][ip] != "" {
      mutate {
        replace => {
          "top_peers_arr_label.key" => "summary_top_peers_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "top_peers_arr_label"
        }
        remove_field => ["top_peers_arr_label"]
      }
    }

    mutate {
      convert => {
        "top_peers_arr.event_count" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "top_peers_arr_label.value.string_value" =>
        "%{top_peers_arr.event_count}"
      }
      on_error => "no_top_peers_arr_event_count_found"
    }

    if ![no_top_peers_arr_event_count_found]
    and [top_peers_arr][event_count] != "" {
      mutate {
        replace => {
          "top_peers_arr_label.key" =>
          "summary_top_peers_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "top_peers_arr_label"
        }
        remove_field => ["top_peers_arr_label"]
      }
    }
  }

  mutate {
    convert => {
      "summary.comms_total" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "comms_total_label.value.string_value" => "%{summary.comms_total}"
    }
    on_error => "no_comms_total_value"
  }

  if ![no_comms_total_value] and [summary][comms_total]!= "" {
    mutate {
      replace => {
        "comms_total_label.key" => "summary_comms_total"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "comms_total_label"
      }
    }
  }

  mutate {
    convert => {
      "summary.total" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "total_label.value.string_value" => "%{summary.total}"
    }
    on_error => "no_total_value"
  }

  if ![no_total_value] and [summary][total]!= "" {
    mutate {
      replace => {
        "total_label.key" => "summary_total"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "total_label"
      }
    }
  }

  for index_info, service_counts_arr in summary.service_counts {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      convert => {
        "service_counts_arr.proto" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.proto}"
      }
      on_error => "no_service_counts_arr_proto_found"
    }

    if ![no_service_counts_arr_proto_found]
    and [service_counts_arr][proto] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_proto"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }

    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.proto_text}"
      }
      on_error => "no_service_counts_arr_proto_text_found"
    }

    if ![no_service_counts_arr_proto_text_found]
    and [service_counts_arr][proto_text] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_proto_text"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }

    mutate {
      convert => {
        "service_counts_arr.port" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.port}"
      }
      on_error => "no_service_counts_arr_port_found"
    }

    if ![no_service_counts_arr_port_found]
    and [service_counts_arr][port] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }

    mutate {
      convert => {
        "service_counts_arr.event_count" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.event_count}"
      }
      on_error => "no_service_counts_arr_event_count_found"
    }

    if ![no_service_counts_arr_event_count_found]
    and [service_counts_arr][event_count] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }

    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.service.service_name}"
      }
      on_error => "no_service_counts_arr_service_name_found"
    }

    if ![no_service_counts_arr_service_name_found]
    and [service_counts_arr][service][service_name] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_service_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }

    mutate {
      convert => {
        "service_counts_arr.service.port" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.service.port}"
      }
      on_error => "no_service_counts_arr_service_port_found"
    }

    if ![no_service_counts_arr_service_port_found]
    and [service_counts_arr][service][port] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_service_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }

    mutate {
      convert => {
        "service_counts_arr.service.proto_number" => "string"
      }
      on_error => "_"
    }
    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.service.proto_number}"
      }
      on_error => "no_service_counts_arr_service_proto_number_found"
    }

    if ![no_service_counts_arr_service_proto_number_found]
    and [service_counts_arr][service][proto_number] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_service_proto_number"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }

    mutate {
      replace => {
        "service_counts_arr_label.value.string_value" =>
        "%{service_counts_arr.service.description}"
      }
      on_error => "no_service_counts_arr_description_found"
    }

    if ![no_service_counts_arr_description_found]
    and [service_counts_arr][service][description] != "" {
      mutate {
        replace => {
          "service_counts_arr_label.key" =>
          "summary_service_counts_%{index_info}_service_description"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "service_counts_arr_label"
        }
        remove_field => ["service_counts_arr_label"]
      }
    }
  }

  mutate {
    convert => {
      "summary.open_ports.unique_ports" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "unique_port_label.value.string_value" =>
      "%{summary.open_ports.unique_ports}"
    }
    on_error => "no_unique_port_found"
  }

  if ![no_unique_port_found] and [summary][open_ports][unique_ports] != "" {
    mutate {
      replace => {
        "unique_port_label.key" => "summary_open_ports_unique_ports"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "unique_port_label"
      }
    }
  }

  mutate {
    convert => {
      "open_ports.unique_ports" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "open_unique_label.value.string_value" => "%{open_ports.unique_ports}"
    }
    on_error => "no_open_unique_label_found"
  }

  if ![no_open_unique_label_found] and [open_ports][unique_ports] != "" {
    mutate {
      replace => {
        "open_unique_label.key" => "open_ports_unique_ports"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "open_unique_label"
      }
    }
  }

  mutate {
    convert => {
      "summary.open_ports.total" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "port_label.value.string_value" => "%{summary.open_ports.total}"
    }
    on_error => "no_port_found"
  }

  if ![no_port_found] and [summary][open_ports][total] != "" {
    mutate {
      replace => {
        "port_label.key" => "summary_open_ports_total"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "port_label"
      }
    }
  }

  for index_info, fingerprint_arr in summary.fingerprints.top_fingerprints {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" => "%{fingerprint_arr.type}"
      }
      on_error => "no_top_fingerprint_arr_type_found"
    }

    if ![no_top_fingerprint_arr_type_found] and [fingerprint_arr][type] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_top_fingerprints_%{index_info}_type"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" =>
        "%{fingerprint_arr.signature}"
      }
      on_error => "no_top_fingerprint_arr_signature_found"
    }

    if ![no_top_fingerprint_arr_signature_found]
    and [fingerprint_arr][signature] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_top_fingerprints_%{index_info}_signature"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      convert => {
        "fingerprint_arr.count" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" => "%{fingerprint_arr.count}"
      }
      on_error => "no_top_fingerprint_arr_count_found"
    }

    if ![no_top_fingerprint_arr_count_found]
    and [fingerprint_arr][count] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_top_fingerprints_%{index_info}_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      convert => {
        "fingerprint_arr.port" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" => "%{fingerprint_arr.port}"
      }
      on_error => "no_top_fingerprint_arr_port_found"
    }

    if ![no_top_fingerprint_arr_port_found] and [fingerprint_arr][port] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_top_fingerprints_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" =>
        "%{fingerprint_arr.first_seen}"
      }
      on_error => "no_top_fingerprint_arr_first_seen_found"
    }

    if ![no_top_fingerprint_arr_first_seen_found]
    and [fingerprint_arr][first_seen] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_top_fingerprints_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" =>
        "%{fingerprint_arr.last_seen}"
      }
      on_error => "no_top_fingerprint_arr_last_seen_found"
    }

    if ![no_top_fingerprint_arr_last_seen_found]
    and [fingerprint_arr][last_seen] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_top_fingerprints_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }
  }

  for index_info, fingerprint_arr in summary.fingerprints {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" => "%{fingerprint_arr.ip}"
      }
      on_error => "no_fingerprint_arr_ip_found"
    }

    if ![no_fingerprint_arr_ip_found] and [fingerprint_arr][ip] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" => "summary_fingerprints_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" => "%{fingerprint_arr.type}"
      }
      on_error => "no_fingerprint_arr_type_found"
    }

    if ![no_fingerprint_arr_type_found] and [fingerprint_arr][type] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_fingerprints_%{index_info}_type"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" =>
        "%{fingerprint_arr.signature}"
      }
      on_error => "no_fingerprint_arr_signature_found"
    }

    if ![no_fingerprint_arr_signature_found]
    and [fingerprint_arr][signature] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_fingerprints_%{index_info}_signature"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

    mutate {
      convert => {
        "fingerprint_arr.event_count" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprint_arr_label.value.string_value" =>
        "%{fingerprint_arr.event_count}"
      }
      on_error => "no_fingerprint_arr_event_count_found"
    }

    if ![no_fingerprint_arr_event_count_found]
    and [fingerprint_arr][event_count] != "" {
      mutate {
        replace => {
          "fingerprint_arr_label.key" =>
          "summary_fingerprints_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprint_arr_label"
        }
        remove_field => ["fingerprint_arr_label"]
      }
    }

  }

  for index_info, fingerprints_arr in fingerprints.fingerprints {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" => "%{fingerprints_arr.ip}"
      }
      on_error => "no_fingerprints_arr_ip_found"
    }

    if ![no_fingerprints_arr_ip_found] and [fingerprints_arr][ip] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" => "fingerprints_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.type}"
      }
      on_error => "no_fingerprints_arr_type_found"
    }

    if ![no_fingerprints_arr_type_found] and [fingerprints_arr][type] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" => "fingerprints_%{index_info}_type"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.fingerprint}"
      }
      on_error => "no_fingerprints_arr_signature_found"
    }

    if ![no_fingerprints_arr_signature_found]
    and [fingerprints_arr][fingerprint] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" =>
          "fingerprints_%{index_info}_fingerprint"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      convert => {
        "fingerprints_arr.event_count" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.event_count}"
      }
      on_error => "no_fingerprints_arr_event_count_found"
    }

    if ![no_fingerprints_arr_event_count_found]
    and [fingerprints_arr][event_count] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" =>
          "fingerprints_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      convert => {
        "fingerprints_arr.port" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.port}"
      }
      on_error => "no_fingerprints_arr_port_found"
    }

    if ![no_fingerprints_arr_port_found] and [fingerprints_arr][port] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" => "fingerprints_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      convert => {
        "fingerprints_arr.distinct_ips" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.distinct_ips}"
      }
      on_error => "no_fingerprints_arr_distinct_ips_found"
    }

    if ![no_fingerprints_arr_distinct_ips_found]
    and [fingerprints_arr][distinct_ips] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" =>
          "fingerprints_%{index_info}_distinct_ips"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      convert => {
        "fingerprints_arr.active_days" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.active_days}"
      }
      on_error => "no_fingerprints_arr_active_days_found"
    }

    if ![no_fingerprints_arr_active_days_found]
    and [fingerprints_arr][active_days] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" =>
          "fingerprints_%{index_info}_active_days"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.first_seen}"
      }
      on_error => "no_fingerprints_arr_first_seen_found"
    }

    if ![no_fingerprints_arr_first_seen_found]
    and [fingerprints_arr][first_seen] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" =>
          "fingerprints_%{index_info}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }

    mutate {
      replace => {
        "fingerprints_arr_label.value.string_value" =>
        "%{fingerprints_arr.last_seen}"
      }
      on_error => "no_fingerprints_arr_last_seen_found"
    }

    if ![no_fingerprints_arr_last_seen_found]
    and [fingerprints_arr][last_seen] != "" {
      mutate {
        replace => {
          "fingerprints_arr_label.key" => "fingerprints_%{index_info}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "fingerprints_arr_label"
        }
        remove_field => ["fingerprints_arr_label"]
      }
    }
  }

  for index_info, certs_arr in summary.certs {
    mutate {
      convert => {
        "index_info" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.ip}"
      }
      on_error => "no_certs_arr_ip_found"
    }

    if ![no_certs_arr_ip_found] and [certs_arr][ip] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_%{index_info}_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.issuer}"
      }
      on_error => "no_certs_arr_issuer_found"
    }

    if ![no_certs_arr_issuer_found] and [certs_arr][issuer] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_%{index_info}_issuer"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" =>
        "%{certs_arr.issuer_common_name}"
      }
      on_error => "no_certs_arr_issuer_common_name_found"
    }

    if ![no_certs_arr_issuer_common_name_found]
    and [certs_arr][issuer_common_name] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" =>
          "summary_certs_%{index_info}_issuer_common_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.common_name}"
      }
      on_error => "no_certs_arr_common_name_found"
    }

    if ![no_certs_arr_common_name_found] and [certs_arr][common_name] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_%{index_info}_common_name"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      convert => {
        "certs_arr.port" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.port}"
      }
      on_error => "no_certs_arr_port_found"
    }

    if ![no_certs_arr_port_found] and [certs_arr][port] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_%{index_info}_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }

    mutate {
      convert => {
        "certs_arr.event_count" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "certs_arr_label.value.string_value" => "%{certs_arr.event_count}"
      }
      on_error => "no_certs_arr_event_count_found"
    }

    if ![no_certs_arr_event_count_found] and [certs_arr][event_count] != "" {
      mutate {
        replace => {
          "certs_arr_label.key" => "summary_certs_%{index_info}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "certs_arr_label"
        }
        remove_field => ["certs_arr_label"]
      }
    }
  }

  for index, peers_arr in communications.peers {
    mutate {
      convert => {
        "index" => "string"
      }
      on_error => "_"
    }

    mutate {
      convert => {
        "peers_arr.proto" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" => "%{peers_arr.proto}"
      }
      on_error => "no_peers_arr_proto_found"
    }

    if ![no_peers_arr_proto_found] and [peers_arr][proto] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_proto"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.proto_text}"
      }
      on_error => "no_peers_arr_proto_text_found"
    }

    if ![no_peers_arr_proto_text_found] and
    [peers_arr][proto_text] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_proto_text"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" => "%{peers_arr.local.ip}"
      }
      on_error => "no_peers_arr_ip_found"
    }

    if ![no_peers_arr_ip_found] and [peers_arr][local][ip] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_local_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      convert => {
        "peers_arr.local.min_port" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.local.min_port}"
      }
      on_error => "no_peers_arr_min_port_found"
    }

    if ![no_peers_arr_min_port_found] and
    [peers_arr][local][min_port] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_local_min_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }
    mutate {
      convert => {
        "peers_arr.local.max_port" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.local.max_port}"
      }
      on_error => "no_peers_arr_max_port_found"
    }

    if ![no_peers_arr_max_port_found] and
    [peers_arr][local][max_port] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_local_max_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      convert => {
        "peers_arr.local.unique_ports" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.local.unique_ports}"
      }
      on_error => "no_peers_arr_unique_ports_found"
    }

    if ![no_peers_arr_unique_ports_found] and
    [peers_arr][local][unique_ports] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_local_unique_ports"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    for ind, local_country_codes in peers_arr.local.country_codes {
      mutate {
        convert => {
          "ind" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "local_country_codes_lable.value.string_value" =>
          "%{local_country_codes}"
        }
        on_error => "invalid_peers_country_code"
      }

      if ![invalid_peers_country_code] and [local_country_codes]!= "" {
        mutate {
          replace => {
            "local_country_codes_lable.key" =>
            "communications_peers_%{index}_local_country_codes_%{ind}"
          }
        }
      }

      mutate {
        merge => {
          "token_additional.fields" => "local_country_codes_lable"
        }
        remove_field => ["local_country_codes_lable"]
      }
    }

    for index_as_info, as_info_arr in peers_arr.local.as_info {
      mutate {
        convert => {
          "index_as_info" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "as_info_arr.asn" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "as_info_arr_label.value.string_value" => "%{as_info_arr.asn}"
        }
        on_error => "no_peers_arr_local_as_info_asn_value"
      }

      if ![no_peers_arr_local_as_info_asn_value] and [as_info_arr][asn] != "" {
        mutate {
          replace => {
            "as_info_arr_label.key" =>
            "communications_peers_%{index}_local_as_info_%{index_as_info}_asn"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "as_info_arr_label"
          }
          remove_field => ["as_info_arr_label"]
        }
      }

      mutate {
        replace => {
          "as_info_arr_label.value.string_value" => "%{as_info_arr.as_name}"
        }
        on_error => "no_peers_arr_local_as_info_as_name_value"
      }

      if ![no_peers_arr_local_as_info_as_name_value]
      and [as_info_arr][as_name] != "" {
        mutate {
          replace => {
            "as_info_arr_label.key" =>
            "communications_peers_%{index}_local_as_info_%{index_as_info}_as_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "as_info_arr_label"
          }
          remove_field => ["as_info_arr_label"]
        }
      }
    }

    for index_tags, local_tags_arr in peers_arr.local.tags {
      mutate {
        convert => {
          "index_tags" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "local_tags_arr.id" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "local_tags_arr_label.value.string_value" => "%{local_tags_arr.id}"
        }
        on_error => "no_peers_arr_local_tags_id_value"
      }

      if ![no_peers_arr_local_tags_id_value] and [local_tags_arr][id] != "" {
        mutate {
          replace => {
            "local_tags_arr_label.key" =>
            "communications_peers_%{index}_local_tags_%{index_tags}_id"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "local_tags_arr_label"
          }
          remove_field => ["local_tags_arr_label"]
        }
      }

      mutate {
        replace => {
          "local_tags_arr_label.value.string_value" => "%{local_tags_arr.name}"
        }
        on_error => "no_peers_arr_local_tags_name_value"
      }

      if ![no_peers_arr_local_tags_name_value]
      and [local_tags_arr][name] != "" {
        mutate {
          replace => {
            "local_tags_arr_label.key" =>
            "communications_peers_%{index}_local_tags_%{index_tags}_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "local_tags_arr_label"
          }
          remove_field => ["local_tags_arr_label"]
        }
      }

      for index_children, local_tags_children_arr in local_tags_arr.children {
        mutate {
          convert => {
            "index_children" => "string"
          }
          on_error => "_"
        }

        mutate {
          convert => {
            "local_tags_children_arr.id" => "string"
          }
          on_error => "_"
        }

        mutate {
          replace => {
            "local_tags_children_arr_label.value.string_value" =>
            "%{local_tags_children_arr.id}"
          }
          on_error => "no_peers_arr_local_tags_children_arr_id_value"
        }

        if ![no_peers_arr_local_tags_children_arr_id_value]
        and [local_tags_children_arr][id] != "" {
          mutate {
            replace => {
              "local_tags_children_arr_label.key" =>
              "communications_peers_%{index}_local_tags_%{index_tags}_children_%{index_children}_id"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "local_tags_children_arr_label"
            }
            remove_field => ["local_tags_children_arr_label"]
          }
        }

        mutate {
          replace => {
            "local_tags_children_arr_label.value.string_value" =>
            "%{local_tags_children_arr.name}"
          }
          on_error => "no_peers_arr_local_tags_children_arr_name_value"
        }

        if ![no_peers_arr_local_tags_children_arr_name_value]
        and [local_tags_children_arr][name] != "" {
          mutate {
            replace => {
              "local_tags_children_arr_label.key" =>
              "communications_peers_%{index}_local_tags_%{index_tags}_children_%{index_children}_name"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "local_tags_children_arr_label"
            }
            remove_field => ["local_tags_children_arr_label"]
          }
        }

      }

    }

    for index_local_top_services, local_top_services_arr in peers_arr.local.top_services {
      mutate {
        convert => {
          "index_local_top_services" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "local_top_services_arr_label.value.string_value" =>
          "%{local_top_services_arr.service_name}"
        }
        on_error => "no_local_top_services_arr_service_name_found"
      }

      if ![no_local_top_services_arr_service_name_found]
      and [local_top_services_arr][service_name] != "" {
        mutate {
          replace => {
            "local_top_services_arr_label.key" =>
            "communications_peers_%{index}_local_top_services_%{index_local_top_services}_service_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "local_top_services_arr_label"
          }
          remove_field => ["local_top_services_arr_label"]
        }
      }

      mutate {
        convert => {
          "local_top_services_arr.port" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "local_top_services_arr_label.value.string_value" =>
          "%{local_top_services_arr.port}"
        }
        on_error => "no_local_top_services_arr_port_found"
      }

      if ![no_local_top_services_arr_port_found]
      and [local_top_services_arr][port] != "" {
        mutate {
          replace => {
            "local_top_services_arr_label.key" =>
            "communications_peers_%{index}_local_top_services_%{index_local_top_services}_port"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "local_top_services_arr_label"
          }
          remove_field => ["local_top_services_arr_label"]
        }
      }

      mutate {
        convert => {
          "local_top_services_arr.proto_number" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "local_top_services_arr_label.value.string_value" =>
          "%{local_top_services_arr.proto_number}"
        }
        on_error => "no_local_top_services_arr_proto_number_found"
      }

      if ![no_local_top_services_arr_proto_number_found]
      and [local_top_services_arr][proto_number] != "" {
        mutate {
          replace => {
            "local_top_services_arr_label.key" =>
            "communications_peers_%{index}_local_top_services_%{index_local_top_services}_proto_number"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "local_top_services_arr_label"
          }
          remove_field => ["local_top_services_arr_label"]
        }
      }

      mutate {
        replace => {
          "local_top_services_arr_label.value.string_value" =>
          "%{local_top_services_arr.description}"
        }
        on_error => "no_local_top_services_arr_description_found"
      }

      if ![no_local_top_services_arr_description_found]
      and [local_top_services_arr][description] != "" {
        mutate {
          replace => {
            "local_top_services_arr_label.key" =>
            "communications_peers_%{index}_local_top_services_%{index_local_top_services}_description"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "local_top_services_arr_label"
          }
          remove_field => ["local_top_services_arr_label"]
        }
      }

    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.peer.ip}"
      }
      on_error => "no_peers_arr_peer_ip_found"
    }

    if ![no_peers_arr_peer_ip_found] and [peers_arr][peer][ip] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_peer_ip"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      convert => {
        "peers_arr.peer.min_port" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.peer.min_port}"
      }
      on_error => "no_peers_arr_peer_min_port_found"
    }

    if ![no_peers_arr_peer_min_port_found]
    and [peers_arr][peer][min_port] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_peer_min_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      convert => {
        "peers_arr.peer.max_port" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.peer.max_port}"
      }
      on_error => "no_peers_arr_peer_max_port_found"
    }

    if ![no_peers_arr_peer_max_port_found]
    and [peers_arr][peer][max_port] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_peer_max_port"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      convert => {
        "peers_arr.peer.unique_ports" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" =>
        "%{peers_arr.peer.unique_ports}"
      }
      on_error => "no_peers_arr_peer_unique_ports_found"
    }

    if ![no_peers_arr_peer_unique_ports_found]
    and [peers_arr][peer][unique_ports] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" =>
          "communications_peers_%{index}_peer_unique_ports"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    for index_peer_cc, peer_country_codes in peers_arr.peer.country_codes {
      mutate {
        convert => {
          "index_peer_cc" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "peer_country_codes_lable.value.string_value" =>
          "%{peer_country_codes}"
        }
        on_error => "invalid_peers_peer_country_code"
      }

      if ![invalid_peers_peer_country_code] and [peer_country_codes]!= "" {
        mutate {
          replace => {
            "peer_country_codes_lable.key" =>
            "communications_peers_%{index}_peer_country_codes_%{index_peer_cc}"
          }
        }
      }

      mutate {
        merge => {
          "token_additional.fields" => "peer_country_codes_lable"
        }
        remove_field => ["peer_country_codes_lable"]
      }
    }

    for index_peer_as_info, peer_as_info_arr in peers_arr.peer.as_info {
      mutate {
        convert => {
          "index_peer_as_info" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "peer_as_info_arr.asn" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "peer_as_info_arr_label.value.string_value" =>
          "%{peer_as_info_arr.asn}"
        }
        on_error => "no_peers_arr_peer_as_info_asn_value"
      }

      if ![no_peers_arr_peer_as_info_asn_value]
      and [peer_as_info_arr][asn] != "" {
        mutate {
          replace => {
            "peer_as_info_arr_label.key" =>
            "communications_peers_%{index}_peer_%{index_peer_as_info}_asn"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_as_info_arr_label"
          }
          remove_field => ["peer_as_info_arr_label"]
        }
      }

      mutate {
        replace => {
          "peer_as_info_arr_label.value.string_value" =>
          "%{peer_as_info_arr.as_name}"
        }
        on_error => "no_peers_arr_peer_as_info_as_name_value"
      }

      if ![no_peers_arr_peer_as_info_as_name_value]
      and [peer_as_info_arr][as_name] != "" {
        mutate {
          replace => {
            "peer_as_info_arr_label.key" =>
            "communications_peers_%{index}_peer_%{index_peer_as_info}_as_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_as_info_arr_label"
          }
          remove_field => ["peer_as_info_arr_label"]
        }
      }
    }

    for index_peer_tags, peer_tags_arr in peers_arr.peer.tags {
      mutate {
        convert => {
          "index_peer_tags" => "string"
        }
        on_error => "_"
      }

      mutate {
        convert => {
          "peer_tags_arr.id" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "peer_tags_arr_label.value.string_value" => "%{peer_tags_arr.id}"
        }
        on_error => "no_peers_arr_peer_tags_id_value"
      }

      if ![no_peers_arr_peer_tags_id_value] and [peer_tags_arr][id] != "" {
        mutate {
          replace => {
            "peer_tags_arr_label.key" =>
            "communications_peers_%{index}_peer_tags_%{index_peer_tags}_id"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_tags_arr_label"
          }
          remove_field => ["peer_tags_arr_label"]
        }
      }

      mutate {
        replace => {
          "peer_tags_arr_label.value.string_value" => "%{peer_tags_arr.name}"
        }
        on_error => "no_peers_arr_peer_tags_name_value"
      }

      if ![no_peers_arr_peer_tags_name_value] and [peer_tags_arr][name] != "" {
        mutate {
          replace => {
            "peer_tags_arr_label.key" =>
            "communications_peers_%{index}_peer_tags_%{index_peer_tags}_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_tags_arr_label"
          }
          remove_field => ["peer_tags_arr_label"]
        }
      }

      for index_children, peer_tags_children_arr in peer_tags_arr.children {
        mutate {
          convert => {
            "index_children" => "string"
          }
          on_error => "_"
        }

        mutate {
          convert => {
            "peer_tags_children_arr.id" => "string"
          }
          on_error => "_"
        }

        mutate {
          replace => {
            "peer_tags_children_arr_label.value.string_value" =>
            "%{peer_tags_children_arr.id}"
          }
          on_error => "no_peers_arr_peer_tags_children_arr_id_value"
        }

        if ![no_peers_arr_peer_tags_children_arr_id_value]
        and [peer_tags_children_arr][id] != "" {
          mutate {
            replace => {
              "peer_tags_children_arr_label.key" =>
              "communications_peers_%{index}_peer_tags_%{index_peer_tags}_children_%{index_children}_id"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "peer_tags_children_arr_label"
            }
            remove_field => ["peer_tags_children_arr_label"]
          }
        }

        mutate {
          replace => {
            "peer_tags_children_arr_label.value.string_value" =>
            "%{peer_tags_children_arr.name}"
          }
          on_error => "no_peers_arr_peer_tags_children_arr_name_value"
        }

        if ![no_peers_arr_peer_tags_children_arr_name_value]
        and [peer_tags_children_arr][name] != "" {
          mutate {
            replace => {
              "peer_tags_children_arr_label.key" =>
              "communications_peers_%{index}_peer_tags_%{index_peer_tags}_children_%{index_children}_name"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "peer_tags_children_arr_label"
            }
            remove_field => ["peer_tags_children_arr_label"]
          }
        }

        for index_children_child, peer_tags_children_children_arr in peer_tags_children_arr.children {
          mutate {
            convert => {
              "index_children_child" => "string"
            }
            on_error => "_"
          }

          mutate {
            convert => {
              "peer_tags_children_children_arr.id" => "string"
            }
            on_error => "_"
          }

          mutate {
            replace => {
              "peer_tags_children_children_arr_label.value.string_value" =>
              "%{peer_tags_children_children_arr.id}"
            }
            on_error => "no_peers_arr_peer_tags_children_children_arr_id_value"
          }

          if ![no_peers_arr_peer_tags_children_children_arr_id_value]
          and [peer_tags_children_children_arr][id] != "" {
            mutate {
              replace => {
                "peer_tags_children_children_arr_label.key" =>
                "communications_peers_%{index}_peer_tags_%{index_peer_tags}_children_%{index_children}_id_children_%{index_children_child}_id"
              }
            }
            mutate {
              merge => {
                "token_additional.fields" =>
                "peer_tags_children_children_arr_label"
              }
              remove_field => ["peer_tags_children_children_arr_label"]
            }
          }

          mutate {
            replace => {
              "peer_tags_children_children_arr_label.value.string_value" =>
              "%{peer_tags_children_children_arr.name}"
            }
            on_error =>
            "no_peers_arr_peer_tags_children_children_arr_name_value"
          }

          if ![no_peers_arr_peer_tags_children_children_arr_name_value]
          and [peer_tags_children_children_arr][name] != "" {
            mutate {
              replace => {
                "peer_tags_children_children_arr_label.key" =>
                "communications_peers_%{index}_peer_tags_%{index_peer_tags}_children_%{index_children}_name_children_%{index_children_child}_name"
              }
            }
            mutate {
              merge => {
                "token_additional.fields" =>
                "peer_tags_children_children_arr_label"
              }
              remove_field => ["peer_tags_children_children_arr_label"]
            }
          }

        }

      }

    }

    for index_peer_top_services, peer_top_services_arr in peers_arr.peer.top_services {
      mutate {
        convert => {
          "index_peer_top_services" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "peer_top_services_arr_label.value.string_value" =>
          "%{peer_top_services_arr.service_name}"
        }
        on_error => "no_peer_top_services_arr_service_name_found"
      }

      if ![no_peer_top_services_arr_service_name_found]
      and [peer_top_services_arr][service_name] != "" {
        mutate {
          replace => {
            "peer_top_services_arr_label.key" =>
            "communications_peers_%{index}_peer_top_services_%{index_peer_top_services}_service_name"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_top_services_arr_label"
          }
          remove_field => ["peer_top_services_arr_label"]
        }
      }

      mutate {
        convert => {
          "peer_top_services_arr.port" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "peer_top_services_arr_label.value.string_value" =>
          "%{peer_top_services_arr.port}"
        }
        on_error => "no_peer_top_services_arr_port_found"
      }

      if ![no_peer_top_services_arr_port_found]
      and [peer_top_services_arr][port] != "" {
        mutate {
          replace => {
            "peer_top_services_arr_label.key" =>
            "communications_peers_%{index}_peer_top_services_%{index_peer_top_services}_port"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_top_services_arr_label"
          }
          remove_field => ["peer_top_services_arr_label"]
        }
      }

      mutate {
        convert => {
          "peer_top_services_arr.proto_number" => "string"
        }
        on_error => "_"
      }

      mutate {
        replace => {
          "peer_top_services_arr_label.value.string_value" =>
          "%{peer_top_services_arr.proto_number}"
        }
        on_error => "no_peer_top_services_arr_proto_number_found"
      }

      if ![no_peer_top_services_arr_proto_number_found]
      and [peer_top_services_arr][proto_number] != "" {
        mutate {
          replace => {
            "peer_top_services_arr_label.key" =>
            "communications_peers_%{index}_peer_top_services_%{index_peer_top_services}_proto_number"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_top_services_arr_label"
          }
          remove_field => ["peer_top_services_arr_label"]
        }
      }

      mutate {
        replace => {
          "peer_top_services_arr_label.value.string_value" =>
          "%{peer_top_services_arr.description}"
        }
        on_error => "no_peer_top_services_arr_description_found"
      }

      if ![no_peer_top_services_arr_description_found]
      and [peer_top_services_arr][description] != "" {
        mutate {
          replace => {
            "peer_top_services_arr_label.key" =>
            "communications_peers_%{index}_peer_top_services_%{index_peer_top_services}_description"
          }
        }
        mutate {
          merge => {
            "token_additional.fields" => "peer_top_services_arr_label"
          }
          remove_field => ["peer_top_services_arr_label"]
        }
      }

    }


    mutate {
      convert => {
        "peers_arr.event_count" => "string"
      }
      on_error => "_"
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" => "%{peers_arr.event_count}"
      }
      on_error => "no_peers_arr_event_count_found"
    }

    if ![no_peers_arr_event_count_found] and [peers_arr][event_count] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" => "communications_peers_%{index}_event_count"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" => "%{peers_arr.first_seen}"
      }
      on_error => "no_peers_arr_first_seen_found"
    }

    if ![no_peers_arr_first_seen_found] and [peers_arr][first_seen] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" => "communications_peers_%{index}_first_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

    mutate {
      replace => {
        "peers_arr_label.value.string_value" => "%{peers_arr.last_seen}"
      }
      on_error => "no_peers_arr_last_seen_found"
    }

    if ![no_peers_arr_last_seen_found] and [peers_arr][last_seen] != "" {
      mutate {
        replace => {
          "peers_arr_label.key" => "communications_peers_%{index}_last_seen"
        }
      }
      mutate {
        merge => {
          "token_additional.fields" => "peers_arr_label"
        }
        remove_field => ["peers_arr_label"]
      }
    }

  }

  mutate {
    convert => {
      "summary.insights.total" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "summary_total_label.value.string_value" => "%{summary.insights.total}"
    }
    on_error => "no_summary_total_found"
  }

  if ![no_summary_total_found] and [summary][insights][total] != "" {
    mutate {
      replace => {
        "summary_total_label.key" => "summary_insights_total"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "summary_total_label"
      }
    }
  }

  mutate {
    convert => {
      "summary.pdns.total" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "summary_pdns_total_label.value.string_value" => "%{summary.pdns.total}"
    }
    on_error => "no_summary_pdns_total_found"
  }

  if ![no_summary_pdns_total_found] and [summary][pdns][total] != "" {
    mutate {
      replace => {
        "summary_pdns_total_label.key" => "summary_pdns_total"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "summary_pdns_total_label"
      }
    }
  }

  for date_index, date in top_asns_by_ip.data.dates {
    for asns in top_asns_by_ip.data.datasets {
      for index, data in asns.data {
        if [date_index] == [index] {
          mutate {
            convert => {
              "data" => "string"
            }
            on_error => "_"
          }
          mutate {
            replace => {
              "asns_label.value.string_value" => "%{data}"
            }
            on_error => "no_valid_asns"
          }

          if ![no_valid_asns] and [data] != "" {
            mutate {
              replace => {
                "asns_label.key" => "asns_[%{asns.label}]_[%{date}]"
              }
            }
            mutate {
              merge => {
                "token_additional.fields" => "asns_label"
              }
              remove_field => ["asns_label"]
            }
          }
        }
      }
    }
  }

  for date_index, date in top_country_codes_by_ip.data.dates {
    for country in top_country_codes_by_ip.data.datasets {
      for index, data in country.data {
        if [date_index] == [index] {
          mutate {
            convert => {
              "data" => "string"
            }
            on_error => "_"
          }
          mutate {
            replace => {
              "country_label.value.string_value" => "%{data}"
            }
            on_error => "no_valid_country"
          }

          if ![no_valid_country] and [data] != "" {
            mutate {
              replace => {
                "country_label.key" => "country_[%{country.label}]_[%{date}]"
              }
            }
            mutate {
              merge => {
                "token_additional.fields" => "country_label"
              }
              remove_field => ["country_label"]
            }
          }
        }
      }
    }
  }

  for date_index, date in top_services_by_ip.data.dates {
    for service in top_services_by_ip.data.datasets {
      for index, data in service.data {
        if [date_index] == [index] {
          mutate {
            convert => {
              "data" => "string"
            }
            on_error => "_"
          }
          mutate {
            replace => {
              "service_label.value.string_value" => "%{data}"
            }
            on_error => "no_valid_service"
          }

          if ![no_valid_service] and [data] != "" {
            mutate {
              replace => {
                "service_label.key" => "service_[%{service.label}]_[%{date}]"
              }
            }
            mutate {
              merge => {
                "token_additional.fields" => "service_label"
              }
              remove_field => ["service_label"]
            }
          }
        }
      }
    }
  }

  for date_index, date in top_tags_by_ip.data.dates {
    for tag in top_tags_by_ip.data.datasets {
      for index, data in tag.data {
        if [date_index] == [index] {
          mutate {
            convert => {
              "data" => "string"
            }
            on_error => "_"
          }
          mutate {
            replace => {
              "tag_label.value.string_value" => "%{data}"
            }
            on_error => "no_valid_tag"
          }

          if ![no_valid_tag] and [data] != "" {
            mutate {
              replace => {
                "tag_label.key" => "tags_[%{tag.label}]_[%{date}]"
              }
            }
            mutate {
              merge => {
                "token_additional.fields" => "tag_label"
              }
              remove_field => ["tag_label"]
            }
          }
        }
      }
    }
  }


  for protocol in proto_by_ip.data.proto_by_date {
    mutate {
      replace => {
        "keyword" => "%{protocol.keyword}"
      }
      on_error => "keyword_error"
    }

    if ![keyword_error] {
      for data in protocol.data {
        mutate {
          convert => {
            "data.count" => "string"
          }
          on_error => "_"
        }

        mutate {
          replace => {
            "keyword_label.value.string_value" => "%{data.count}"
          }
          on_error => "no_valid_keyword"
        }

        if ![no_valid_keyword] and [data][count] != "" {
          mutate {
            replace => {
              "keyword_label.key" => "proto_[%{keyword}]_[%{data.date}]"
            }
          }
          mutate {
            merge => {
              "token_additional.fields" => "keyword_label"
            }
            remove_field => ["keyword_label"]
          }
        }
      }
    }
  }

  mutate {
    convert => {
      "communications.event_count" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "communication_events_label.value.string_value" =>
      "%{communications.event_count}"
    }
    on_error => "no_communication_events_found"
  }

  if ![no_communication_events_found] and [communications][event_count] != "" {
    mutate {
      replace => {
        "communication_events_label.key" => "communications_event_count"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "communication_events_label"
      }
    }
  }

  mutate {
    replace => {
      "end_date_label.value.string_value" => "%{end_date}"
    }
    on_error => "no_end_date_found"
  }

  if ![no_end_date_found] and [end_date] != "" {
    mutate {
      replace => {
        "end_date_label.key" => "end_date"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "end_date_label"
      }
    }
  }

  mutate {
    replace => {
      "start_date_label.value.string_value" => "%{start_date}"
    }
    on_error => "no_start_date_found"
  }

  if ![no_start_date_found] and [start_date] != "" {
    mutate {
      replace => {
        "start_date_label.key" => "start_date"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "start_date_label"
      }
    }
  }

  mutate {
    convert => {
      "event_count" => "string"
    }
    on_error => "_"
  }

  mutate {
    replace => {
      "event_count_label.value.string_value" => "%{event_count}"
    }
    on_error => "no_event_count_found"
  }

  if ![no_event_count_found] and [event_count] != "" {
    mutate {
      replace => {
        "event_count_label.key" => "event_count"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "event_count_label"
      }
    }
  }

  mutate {
    replace => {
      "indicator_label.value.string_value" => "%{indicator}"
    }
    on_error => "no_indicator_found"
  }

  if ![no_indicator_found] and [indicator] != "" {
    mutate {
      replace => {
        "indicator_label.key" => "indicator"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "indicator_label"
      }
    }
  }

  mutate {
    replace => {
      "indicator_type_label.value.string_value" => "%{indicator_type}"
    }
    on_error => "no_indicator_type_found"
  }

  if ![no_indicator_type_found] and [indicator_type] != "" {
    mutate {
      replace => {
        "indicator_type_label.key" => "indicator_type"
      }
    }
    mutate {
      merge => {
        "token_additional.fields" => "indicator_type_label"
      }
    }
  }

  for index, val in sections {
    mutate {
      merge => {
        "token_about.artifact.tags" => "val"
      }
      on_error => "invalid_sections"
    }
  }

  mutate {
    replace => {
      "timestamp" => "%{start_date}"
    }
    on_error => "start_date_not_found"
  }

  if ![start_date_not_found] and [timestamp] != "" {
    date {
      match => ["start_date", "yyyy-MM-dd", "yyyy-M-dd", "yyyy-MM-d", "yyyy-M-d"]
      rebase => true
      target => "event.idm.entity.metadata.interval.start_time"
      on_error => "start_date_not_supported"
    }

    if ![start_date_not_supported] {
      mutate {
        replace => {
          "start_date_supported" => "true"
        }
      }
    }
  }

  if [start_date_supported] != "true" {
    mutate {
      replace => {
        "timestamp" => "%{interval_start}"
      }
      on_error => "interval_start_not_found"
    }

    if ![interval_start_not_found] and [timestamp] != "" {
      date {
        match => ["interval_start", "yyyy-MM-dd", "yyyy-M-dd", "yyyy-MM-d", "yyyy-M-d"]
        rebase => true
        target => "event.idm.entity.metadata.interval.start_time"
        on_error => "interval_start_not_supported"
      }
    }
  }

  mutate {
    replace => {
      "timestamp" => "%{end_date}"
    }
    on_error => "end_date_not_found"
  }

  if ![end_date_not_found] and [timestamp] != "" {
    date {
      match => ["end_date", "yyyy-MM-dd", "yyyy-M-dd", "yyyy-MM-d", "yyyy-M-d"]
      rebase => true
      target => "event.idm.entity.metadata.interval.end_time"
      on_error => "end_date_not_supported"
    }

    if ![end_date_not_supported] {
      mutate {
        replace => {
          "end_date_supported" => "true"
        }
      }
    }
  }

  if [end_date_supported] != "true" {
    mutate {
      replace => {
        "timestamp" => "%{interval_end}"
      }
      on_error => "interval_end_not_found"
    }

    if ![interval_end_not_found] and [timestamp] != "" {
      date {
        match => ["interval_end", "yyyy-MM-dd", "yyyy-M-dd", "yyyy-MM-d", "yyyy-M-d"]
        rebase => true
        target => "event.idm.entity.metadata.interval.end_time"
        on_error => "interval_end_not_supported"
      }
    }
  }


  if [indicator_type] == "DOMAIN" and [indicator] != "" {
    mutate {
      replace => {
        "token_about.hostname" => "%{indicator}"
      }
      on_error => "no_domain_found"
    }
  }

  if [indicator_type] != ""
  and [ip_found] == "true"
  and [security_result_label] != "" {
    mutate {
      replace => {
        "event.idm.entity.metadata.entity_type" =>
        "IP_ADDRESS"
      }
    }
  }
  else if [indicator_type] != "" {
    drop {
      tag => "TAG_MALFORMED_ENCODING"
    }
  }


  if [token_additional] != "" and [indicator_type] != "" {
    mutate {
      rename => {
        "token_additional" =>
        "event.idm.entity.additional"
      }
    }
  }
  else if [token_additional] != "" {
    mutate {
      rename => {
        "token_additional" =>
        "event.idm.read_only_udm.additional"
      }
    }
  }

  if [token_about] != "" {
    mutate {
      rename => {
        "token_about" =>
        "event.idm.entity.entity"
      }
      on_error => "_"
    }
  }

  if [security_result_label] != "" {
    mutate {
      merge => {
        "event.idm.entity.metadata.threat" =>
        "security_result_label"
      }
      on_error => "_"
    }
  }

  mutate {
    merge => {
      "@output" => "event"
    }
  }
}
